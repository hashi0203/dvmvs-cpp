#pragma once

constexpr int tbbit = 10;
constexpr int actbit = 16;
constexpr qaint celu_table[1024] = {0, -191, -382, -571, -759, -946, -1132, -1317, -1501, -1683, -1865, -2045, -2225, -2403, -2581, -2757, -2932, -3107, -3280, -3452, -3624, -3794, -3963, -4131, -4299, -4465, -4630, -4795, -4958, -5121, -5282, -5443, -5602, -5761, -5919, -6076, -6232, -6387, -6541, -6694, -6846, -6998, -7148, -7298, -7447, -7595, -7742, -7888, -8033, -8178, -8322, -8464, -8606, -8748, -8888, -9027, -9166, -9304, -9441, -9577, -9713, -9848, -9981, -10115, -10247, -10378, -10509, -10639, -10769, -10897, -11025, -11152, -11278, -11404, -11529, -11653, -11776, -11899, -12021, -12142, -12262, -12382, -12501, -12620, -12737, -12854, -12971, -13086, -13201, -13316, -13429, -13542, -13655, -13766, -13877, -13988, -14097, -14206, -14315, -14423, -14530, -14636, -14742, -14848, -14952, -15056, -15160, -15263, -15365, -15467, -15568, -15668, -15768, -15868, -15966, -16064, -16162, -16259, -16355, -16451, -16547, -16641, -16736, -16829, -16922, -17015, -17107, -17199, -17289, -17380, -17470, -17559, -17648, -17736, -17824, -17912, -17998, -18085, -18170, -18256, -18340, -18425, -18509, -18592, -18675, -18757, -18839, -18920, -19001, -19082, -19162, -19241, -19320, -19399, -19477, -19554, -19632, -19708, -19785, -19860, -19936, -20011, -20085, -20159, -20233, -20306, -20379, -20452, -20523, -20595, -20666, -20737, -20807, -20877, -20946, -21016, -21084, -21152, -21220, -21288, -21355, -21422, -21488, -21554, -21619, -21684, -21749, -21814, -21878, -21941, -22004, -22067, -22130, -22192, -22254, -22315, -22376, -22437, -22497, -22557, -22617, -22676, -22735, -22794, -22852, -22910, -22968, -23025, -23082, -23138, -23195, -23251, -23306, -23361, -23416, -23471, -23525, -23579, -23633, -23686, -23739, -23792, -23845, -23897, -23949, -24000, -24051, -24102, -24153, -24203, -24253, -24303, -24352, -24402, -24451, -24499, -24547, -24595, -24643, -24691, -24738, -24785, -24831, -24878, -24924, -24970, -25015, -25061, -25106, -25150, -25195, -25239, -25283, -25327, -25370, -25414, -25456, -25499, -25542, -25584, -25626, -25668, -25709, -25750, -25791, -25832, -25873, -25913, -25953, -25993, -26032, -26072, -26111, -26150, -26188, -26227, -26265, -26303, -26341, -26378, -26416, -26453, -26490, -26526, -26563, -26599, -26635, -26671, -26707, -26742, -26777, -26812, -26847, -26882, -26916, -26950, -26984, -27018, -27051, -27085, -27118, -27151, -27184, -27217, -27249, -27281, -27313, -27345, -27377, -27408, -27440, -27471, -27502, -27532, -27563, -27593, -27624, -27654, -27684, -27713, -27743, -27772, -27801, -27830, -27859, -27888, -27916, -27945, -27973, -28001, -28029, -28057, -28084, -28111, -28139, -28166, -28193, -28219, -28246, -28272, -28299, -28325, -28351, -28376, -28402, -28428, -28453, -28478, -28503, -28528, -28553, -28578, -28602, -28626, -28651, -28675, -28699, -28722, -28746, -28769, -28793, -28816, -28839, -28862, -28885, -28908, -28930, -28953, -28975, -28997, -29019, -29041, -29063, -29084, -29106, -29127, -29149, -29170, -29191, -29212, -29232, -29253, -29274, -29294, -29314, -29334, -29355, -29374, -29394, -29414, -29434, -29453, -29472, -29492, -29511, -29530, -29549, -29568, -29586, -29605, -29623, -29642, -29660, -29678, -29696, -29714, -29732, -29750, -29767, -29785, -29802, -29820, -29837, -29854, -29871, -29888, -29905, -29921, -29938, -29955, -29971, -29987, -30004, -30020, -30036, -30052, -30068, -30083, -30099, -30115, -30130, -30146, -30161, -30176, -30191, -30206, -30221, -30236, -30251, -30266, -30280, -30295, -30309, -30324, -30338, -30352, -30366, -30380, -30394, -30408, -30422, -30436, -30449, -30463, -30476, -30490, -30503, -30516, -30529, -30542, -30555, -30568, -30581, -30594, -30607, -30619, -30632, -30644, -30657, -30669, -30681, -30694, -30706, -30718, -30730, -30742, -30753, -30765, -30777, -30789, -30800, -30812, -30823, -30834, -30846, -30857, -30868, -30879, -30890, -30901, -30912, -30923, -30934, -30944, -30955, -30966, -30976, -30987, -30997, -31007, -31018, -31028, -31038, -31048, -31058, -31068, -31078, -31088, -31098, -31108, -31117, -31127, -31137, -31146, -31156, -31165, -31174, -31184, -31193, -31202, -31211, -31220, -31229, -31238, -31247, -31256, -31265, -31274, -31283, -31291, -31300, -31308, -31317, -31325, -31334, -31342, -31351, -31359, -31367, -31375, -31383, -31392, -31400, -31408, -31416, -31423, -31431, -31439, -31447, -31455, -31462, -31470, -31477, -31485, -31492, -31500, -31507, -31515, -31522, -31529, -31537, -31544, -31551, -31558, -31565, -31572, -31579, -31586, -31593, -31600, -31607, -31613, -31620, -31627, -31634, -31640, -31647, -31653, -31660, -31666, -31673, -31679, -31685, -31692, -31698, -31704, -31711, -31717, -31723, -31729, -31735, -31741, -31747, -31753, -31759, -31765, -31771, -31777, -31782, -31788, -31794, -31800, -31805, -31811, -31816, -31822, -31827, -31833, -31838, -31844, -31849, -31855, -31860, -31865, -31871, -31876, -31881, -31886, -31891, -31896, -31902, -31907, -31912, -31917, -31922, -31927, -31931, -31936, -31941, -31946, -31951, -31956, -31960, -31965, -31970, -31974, -31979, -31984, -31988, -31993, -31997, -32002, -32006, -32011, -32015, -32020, -32024, -32028, -32033, -32037, -32041, -32045, -32050, -32054, -32058, -32062, -32066, -32070, -32075, -32079, -32083, -32087, -32091, -32095, -32098, -32102, -32106, -32110, -32114, -32118, -32122, -32125, -32129, -32133, -32137, -32140, -32144, -32148, -32151, -32155, -32158, -32162, -32165, -32169, -32173, -32176, -32179, -32183, -32186, -32190, -32193, -32196, -32200, -32203, -32206, -32210, -32213, -32216, -32219, -32223, -32226, -32229, -32232, -32235, -32238, -32241, -32245, -32248, -32251, -32254, -32257, -32260, -32263, -32266, -32268, -32271, -32274, -32277, -32280, -32283, -32286, -32289, -32291, -32294, -32297, -32300, -32302, -32305, -32308, -32311, -32313, -32316, -32318, -32321, -32324, -32326, -32329, -32331, -32334, -32337, -32339, -32342, -32344, -32347, -32349, -32351, -32354, -32356, -32359, -32361, -32363, -32366, -32368, -32371, -32373, -32375, -32377, -32380, -32382, -32384, -32387, -32389, -32391, -32393, -32395, -32398, -32400, -32402, -32404, -32406, -32408, -32410, -32412, -32414, -32417, -32419, -32421, -32423, -32425, -32427, -32429, -32431, -32433, -32435, -32437, -32438, -32440, -32442, -32444, -32446, -32448, -32450, -32452, -32454, -32455, -32457, -32459, -32461, -32463, -32464, -32466, -32468, -32470, -32471, -32473, -32475, -32477, -32478, -32480, -32482, -32483, -32485, -32487, -32488, -32490, -32492, -32493, -32495, -32496, -32498, -32500, -32501, -32503, -32504, -32506, -32507, -32509, -32510, -32512, -32513, -32515, -32516, -32518, -32519, -32521, -32522, -32524, -32525, -32526, -32528, -32529, -32531, -32532, -32533, -32535, -32536, -32538, -32539, -32540, -32542, -32543, -32544, -32545, -32547, -32548, -32549, -32551, -32552, -32553, -32554, -32556, -32557, -32558, -32559, -32561, -32562, -32563, -32564, -32565, -32567, -32568, -32569, -32570, -32571, -32572, -32574, -32575, -32576, -32577, -32578, -32579, -32580, -32581, -32582, -32584, -32585, -32586, -32587, -32588, -32589, -32590, -32591, -32592, -32593, -32594, -32595, -32596, -32597, -32598, -32599, -32600, -32601, -32602, -32603, -32604, -32605, -32606, -32607, -32608, -32609, -32610, -32611, -32611, -32612, -32613, -32614, -32615, -32616, -32617, -32618, -32619, -32619, -32620, -32621, -32622, -32623, -32624, -32625, -32625, -32626, -32627, -32628, -32629, -32630, -32630, -32631, -32632, -32633, -32634, -32634, -32635, -32636, -32637, -32637, -32638, -32639, -32640, -32640, -32641, -32642, -32643, -32643, -32644, -32645, -32646, -32646, -32647, -32648, -32648, -32649, -32650, -32651, -32651, -32652, -32653, -32653, -32654, -32655, -32655, -32656, -32657, -32657, -32658, -32658, -32659, -32660, -32660, -32661, -32662, -32662, -32663, -32664, -32664, -32665, -32665, -32666, -32667, -32667, -32668, -32668, -32669, -32669, -32670, -32671, -32671, -32672, -32672, -32673, -32673, -32674, -32675, -32675, -32676, -32676, -32677, -32677, -32678, -32678, -32679, -32679, -32680, -32680, -32681, -32681, -32682, -32682, -32683, -32683, -32684, -32684, -32685, -32685, -32686, -32686};
constexpr qaint Sigmoid_table[1024] = {16384, 16432, 16480, 16528, 16576, 16624, 16672, 16720, 16768, 16816, 16864, 16912, 16960, 17008, 17056, 17104, 17151, 17199, 17247, 17295, 17343, 17391, 17439, 17486, 17534, 17582, 17630, 17677, 17725, 17773, 17820, 17868, 17916, 17963, 18011, 18058, 18106, 18153, 18201, 18248, 18295, 18343, 18390, 18437, 18484, 18532, 18579, 18626, 18673, 18720, 18767, 18814, 18861, 18908, 18955, 19001, 19048, 19095, 19142, 19188, 19235, 19281, 19328, 19374, 19420, 19467, 19513, 19559, 19605, 19652, 19698, 19744, 19790, 19836, 19881, 19927, 19973, 20019, 20064, 20110, 20155, 20201, 20246, 20291, 20337, 20382, 20427, 20472, 20517, 20562, 20607, 20651, 20696, 20741, 20785, 20830, 20874, 20919, 20963, 21007, 21051, 21095, 21139, 21183, 21227, 21271, 21315, 21358, 21402, 21445, 21489, 21532, 21575, 21618, 21661, 21704, 21747, 21790, 21833, 21875, 21918, 21960, 22003, 22045, 22087, 22129, 22171, 22213, 22255, 22297, 22339, 22380, 22422, 22463, 22505, 22546, 22587, 22628, 22669, 22710, 22751, 22792, 22832, 22873, 22913, 22953, 22994, 23034, 23074, 23114, 23154, 23193, 23233, 23273, 23312, 23352, 23391, 23430, 23469, 23508, 23547, 23586, 23624, 23663, 23701, 23740, 23778, 23816, 23854, 23892, 23930, 23968, 24006, 24043, 24081, 24118, 24155, 24192, 24229, 24266, 24303, 24340, 24377, 24413, 24449, 24486, 24522, 24558, 24594, 24630, 24666, 24701, 24737, 24773, 24808, 24843, 24878, 24913, 24948, 24983, 25018, 25052, 25087, 25121, 25156, 25190, 25224, 25258, 25292, 25326, 25359, 25393, 25426, 25459, 25493, 25526, 25559, 25592, 25624, 25657, 25690, 25722, 25755, 25787, 25819, 25851, 25883, 25915, 25946, 25978, 26009, 26041, 26072, 26103, 26134, 26165, 26196, 26227, 26257, 26288, 26318, 26349, 26379, 26409, 26439, 26469, 26499, 26528, 26558, 26587, 26617, 26646, 26675, 26704, 26733, 26762, 26790, 26819, 26847, 26876, 26904, 26932, 26960, 26988, 27016, 27044, 27071, 27099, 27126, 27154, 27181, 27208, 27235, 27262, 27289, 27315, 27342, 27368, 27395, 27421, 27447, 27473, 27499, 27525, 27551, 27576, 27602, 27627, 27653, 27678, 27703, 27728, 27753, 27778, 27803, 27827, 27852, 27876, 27901, 27925, 27949, 27973, 27997, 28021, 28045, 28068, 28092, 28115, 28138, 28162, 28185, 28208, 28231, 28254, 28276, 28299, 28322, 28344, 28367, 28389, 28411, 28433, 28455, 28477, 28499, 28521, 28542, 28564, 28585, 28606, 28628, 28649, 28670, 28691, 28712, 28732, 28753, 28774, 28794, 28815, 28835, 28855, 28875, 28895, 28915, 28935, 28955, 28975, 28994, 29014, 29033, 29053, 29072, 29091, 29110, 29129, 29148, 29167, 29186, 29204, 29223, 29241, 29260, 29278, 29296, 29314, 29332, 29350, 29368, 29386, 29404, 29422, 29439, 29457, 29474, 29491, 29509, 29526, 29543, 29560, 29577, 29594, 29610, 29627, 29644, 29660, 29677, 29693, 29709, 29725, 29742, 29758, 29774, 29789, 29805, 29821, 29837, 29852, 29868, 29883, 29899, 29914, 29929, 29944, 29959, 29974, 29989, 30004, 30019, 30034, 30048, 30063, 30078, 30092, 30106, 30121, 30135, 30149, 30163, 30177, 30191, 30205, 30219, 30232, 30246, 30260, 30273, 30287, 30300, 30314, 30327, 30340, 30353, 30366, 30379, 30392, 30405, 30418, 30431, 30443, 30456, 30468, 30481, 30493, 30506, 30518, 30530, 30543, 30555, 30567, 30579, 30591, 30603, 30614, 30626, 30638, 30649, 30661, 30673, 30684, 30695, 30707, 30718, 30729, 30740, 30752, 30763, 30774, 30785, 30795, 30806, 30817, 30828, 30838, 30849, 30860, 30870, 30881, 30891, 30901, 30912, 30922, 30932, 30942, 30952, 30962, 30972, 30982, 30992, 31002, 31012, 31021, 31031, 31041, 31050, 31060, 31069, 31079, 31088, 31097, 31106, 31116, 31125, 31134, 31143, 31152, 31161, 31170, 31179, 31188, 31197, 31205, 31214, 31223, 31231, 31240, 31248, 31257, 31265, 31274, 31282, 31290, 31298, 31307, 31315, 31323, 31331, 31339, 31347, 31355, 31363, 31371, 31379, 31386, 31394, 31402, 31409, 31417, 31425, 31432, 31440, 31447, 31454, 31462, 31469, 31476, 31484, 31491, 31498, 31505, 31512, 31519, 31526, 31533, 31540, 31547, 31554, 31561, 31568, 31574, 31581, 31588, 31594, 31601, 31608, 31614, 31621, 31627, 31634, 31640, 31646, 31653, 31659, 31665, 31671, 31678, 31684, 31690, 31696, 31702, 31708, 31714, 31720, 31726, 31732, 31738, 31744, 31749, 31755, 31761, 31767, 31772, 31778, 31784, 31789, 31795, 31800, 31806, 31811, 31817, 31822, 31827, 31833, 31838, 31843, 31849, 31854, 31859, 31864, 31869, 31874, 31879, 31884, 31889, 31894, 31899, 31904, 31909, 31914, 31919, 31924, 31929, 31933, 31938, 31943, 31948, 31952, 31957, 31962, 31966, 31971, 31975, 31980, 31984, 31989, 31993, 31998, 32002, 32006, 32011, 32015, 32019, 32024, 32028, 32032, 32036, 32041, 32045, 32049, 32053, 32057, 32061, 32065, 32069, 32073, 32077, 32081, 32085, 32089, 32093, 32097, 32100, 32104, 32108, 32112, 32116, 32119, 32123, 32127, 32130, 32134, 32138, 32141, 32145, 32149, 32152, 32156, 32159, 32163, 32166, 32170, 32173, 32176, 32180, 32183, 32186, 32190, 32193, 32196, 32200, 32203, 32206, 32209, 32213, 32216, 32219, 32222, 32225, 32228, 32232, 32235, 32238, 32241, 32244, 32247, 32250, 32253, 32256, 32259, 32262, 32265, 32267, 32270, 32273, 32276, 32279, 32282, 32284, 32287, 32290, 32293, 32295, 32298, 32301, 32304, 32306, 32309, 32312, 32314, 32317, 32319, 32322, 32325, 32327, 32330, 32332, 32335, 32337, 32340, 32342, 32345, 32347, 32349, 32352, 32354, 32357, 32359, 32361, 32364, 32366, 32368, 32371, 32373, 32375, 32378, 32380, 32382, 32384, 32387, 32389, 32391, 32393, 32395, 32397, 32400, 32402, 32404, 32406, 32408, 32410, 32412, 32414, 32416, 32418, 32420, 32422, 32424, 32426, 32428, 32430, 32432, 32434, 32436, 32438, 32440, 32442, 32444, 32446, 32447, 32449, 32451, 32453, 32455, 32457, 32458, 32460, 32462, 32464, 32465, 32467, 32469, 32471, 32472, 32474, 32476, 32478, 32479, 32481, 32483, 32484, 32486, 32487, 32489, 32491, 32492, 32494, 32496, 32497, 32499, 32500, 32502, 32503, 32505, 32506, 32508, 32509, 32511, 32512, 32514, 32515, 32517, 32518, 32520, 32521, 32523, 32524, 32525, 32527, 32528, 32530, 32531, 32532, 32534, 32535, 32536, 32538, 32539, 32540, 32542, 32543, 32544, 32546, 32547, 32548, 32550, 32551, 32552, 32553, 32555, 32556, 32557, 32558, 32559, 32561, 32562, 32563, 32564, 32565, 32567, 32568, 32569, 32570, 32571, 32572, 32574, 32575, 32576, 32577, 32578, 32579, 32580, 32581, 32582, 32583, 32585, 32586, 32587, 32588, 32589, 32590, 32591, 32592, 32593, 32594, 32595, 32596, 32597, 32598, 32599, 32600, 32601, 32602, 32603, 32604, 32605, 32606, 32607, 32608, 32609, 32609, 32610, 32611, 32612, 32613, 32614, 32615, 32616, 32617, 32618, 32618, 32619, 32620, 32621, 32622, 32623, 32624, 32624, 32625, 32626, 32627, 32628, 32629, 32629, 32630, 32631, 32632, 32633, 32633, 32634, 32635, 32636, 32636, 32637, 32638, 32639, 32639, 32640, 32641, 32642, 32642, 32643, 32644, 32645, 32645, 32646, 32647, 32647, 32648, 32649, 32650, 32650, 32651, 32652, 32652, 32653, 32654, 32654, 32655, 32656, 32656, 32657, 32658, 32658, 32659, 32659, 32660, 32661, 32661, 32662, 32663, 32663, 32664, 32664, 32665, 32666, 32666, 32667, 32667, 32668, 32669, 32669, 32670, 32670, 32671, 32671, 32672, 32673, 32673, 32674, 32674, 32675, 32675, 32676, 32676, 32677, 32677, 32678, 32679, 32679, 32680, 32680, 32681, 32681, 32682, 32682, 32683, 32683, 32684, 32684, 32685, 32685, 32686, 32686, 32687};

void ReLU(float* x, const int channels, const int height, const int width) {
    for (int idx = 0; idx < channels * height * width; idx++)
        x[idx] = max(0.0f, x[idx]);
}


void celu(float* x, const int channels, const int height, const int width) {
    for (int idx = 0; idx < channels * height * width; idx++) {
        const int tb_idx = -round(x[idx] * (1 << tbbit) / 6.0);
        x[idx] = tb_idx < 0 ? x[idx] :
                 tb_idx >= (1 << tbbit) ? -1 :
                 (celu_table[tb_idx]) / (float) (1 << (actbit-1));
    }
}


void Sigmoid(float* x, const int channels, const int height, const int width) {
    for (int idx = 0; idx < channels * height * width; idx++) {
        const int tb_idx = round(abs(x[idx]) * (1 << tbbit) / 6.0);
        const bool sign = x[idx] >= 0;
        x[idx] = tb_idx >= (1 << tbbit) ? sign :
                 sign ? Sigmoid_table[tb_idx] / (float) (1 << (actbit-1)) :
                 ((1 << (actbit-1)) - Sigmoid_table[tb_idx]) / (float) (1 << (actbit-1)) ;
    }
    ascale_cnt++;
}
