#pragma once
#include "settings.h"

constexpr bool nngen_code = true;
constexpr bool shift_ckeck = false;

constexpr int org_image_width = 540;
constexpr int org_image_height = 360;
// constexpr int test_image_width = 320;
// constexpr int test_image_height = 256;

// constexpr int org_image_width = 128;
// constexpr int org_image_height = 128;
constexpr int test_image_width = 96;
constexpr int test_image_height = 64;

constexpr int test_n_measurement_frames = 2;
constexpr int test_keyframe_buffer_size = 30;
constexpr float test_keyframe_pose_distance = 0.1;
constexpr float test_optimal_t_measure = 0.15;
constexpr float test_optimal_R_measure = 0.0;

// SET THESE: TESTING FOLDER LOCATIONS
// for run-testing-online.py (evaluate a single scene, WITHOUT keyframe indices, online selection)
const string test_online_scene_path = "/home/nhsmt1123/master-thesis/deep-video-mvs/sample-data/hololens-dataset/000";

const string dataset_name = "hololens-dataset";
const string system_name = "keyframe_" + dataset_name + "_" + to_string(test_image_width) + "_" + to_string(test_image_height) + "_" + to_string(test_n_measurement_frames) + "_dvmvs_fusionnet_online";

const string scene_folder = test_online_scene_path;
const string scene = "000";

constexpr int n_test_frames = 30;

constexpr float scale_rgb = 255.0;
constexpr float mean_rgb[3] = {0.485, 0.456, 0.406};
constexpr float std_rgb[3] = {0.229, 0.224, 0.225};

constexpr float min_depth = 0.25;
constexpr float max_depth = 20.0;
constexpr int n_depth_levels = 64;

constexpr float inverse_depth_base = 1.0 / max_depth;
constexpr float inverse_depth_multiplier = 1.0 / min_depth - 1.0 / max_depth;
constexpr float inverse_depth_step = inverse_depth_multiplier / (n_depth_levels - 1);

constexpr int fpn_output_channels = 32;
constexpr int hyper_channels = 32;
constexpr int hid_channels = hyper_channels * 16;

constexpr int channels_1 = 16;
constexpr int channels_2 = 24;
constexpr int channels_3 = 40;
constexpr int channels_4 = 96;
constexpr int channels_5 = 320;

constexpr int height_2 = test_image_height / 2;
constexpr int height_4 = test_image_height / 4;
constexpr int height_8 = test_image_height / 8;
constexpr int height_16 = test_image_height / 16;
constexpr int height_32 = test_image_height / 32;

constexpr int width_2 = test_image_width / 2;
constexpr int width_4 = test_image_width / 4;
constexpr int width_8 = test_image_width / 8;
constexpr int width_16 = test_image_width / 16;
constexpr int width_32 = test_image_width / 32;

constexpr float height_normalizer = height_2 / 2.0;
constexpr float width_normalizer = width_2 / 2.0;

constexpr int n_convs = 96;
constexpr int n_bns = 81;
constexpr int n_adds = 14;
constexpr int n_others = 77;

extern int conv_cnt;
extern int bn_cnt;
extern int add_cnt;
extern int other_cnt;
extern int act_cnt;

// constexpr int qwbit = 8;
typedef char qwint;
constexpr int n_weights = 34619560;
extern qwint* weights;
extern int w_idx[n_convs];
extern int w_shifts[n_convs];

// constexpr int qbbit = 28;
typedef int qbint;
constexpr int n_biases = 24885;
extern qbint* biases;
extern int b_idx[n_convs];
extern int b_shifts[n_convs];

// constexpr int qsbit = 8;
typedef char qsint;
constexpr int n_scales = 22544;
extern qsint* scales;
extern int s_idx[n_bns];
extern int s_shifts[n_bns];

// constexpr int qabit = 16;
typedef short qaint;
extern int cin_shifts[n_convs];
extern int cout_shifts[n_convs];
extern int ain1_shifts[n_adds];
extern int ain2_shifts[n_adds];
extern int aout_shifts[n_adds];
extern int oin_shifts[n_others];
extern int oout_shifts[n_others];

typedef int qmint;
constexpr qmint QA_MIN = -32768;
constexpr qmint QA_MAX = 32767;

// 20 bit
// [('cost_volume', [13, 11]), ('cat', [13, 11]), ('cat', [14, 17]), ('cat', [15, 16]), ('cat', [15, 16]), ('cat', [17, 18]), ('layer_norm', [13, 13, 14, 17]), ('layer_norm', [16, 16, 16]), ('cell_hidden', [16, 18]), ('cat', [17, 16]), ('cat', [17, 17, 20]), ('cat', [17, 17, 20]), ('cat', [17, 17, 20]), ('cat', [18, 20, 16])]

//  16 bit
// [('cost_volume', [9, 7]), ('cat', [9, 7]), ('cat', [10, 13]), ('cat', [11, 12]), ('cat', [11, 12]), ('cell_hidden', [12, 14]), ('cat', [13, 14]), ('layer_norm', [9, 10, 13]), ('layer_norm', [12, 12]), ('cell_hidden', [12, 14]), ('cat', [13, 12]), ('cat', [13, 13, 16]), ('cat', [13, 13, 16]), ('cat', [13, 13, 16]), ('cat', [14, 16, 12])]
// [('interpolate', [13, 13]), ('interpolate', [12, 12]), ('interpolate', [11, 11]), ('interpolate', [10, 10]), ('cost_volume', [9, 7]), ('cat', [9, 7]), ('cat', [10, 13]), ('cat', [11, 12]), ('cat', [11, 12]), ('cell_hidden', [12, 14]), ('cat', [13, 14]), ('layer_norm', [9, 10, 13]), ('layer_norm', [12, 12]), ('cell_hidden', [12, 14]), ('interpolate', [14, 14]), ('cat', [13, 12]), ('interpolate', [15, 15]), ('interpolate', [15, 16]), ('cat', [13, 13, 15]), ('interpolate', [14, 14]), ('interpolate', [16, 16]), ('cat', [13, 13, 16]), ('interpolate', [14, 14]), ('interpolate', [16, 16]), ('cat', [13, 13, 16]), ('interpolate', [16, 16]), ('interpolate', [14, 14]), ('cat', [14, 16, 12])]


// 20 bit
// constexpr int cvinshift = 13;
// constexpr int cvoutshift = 9;

// 16 bit
// constexpr int cvinshift = 9;
// constexpr int cvoutshift = 7;

// constexpr int cellshift = 16;
// constexpr int hiddenshift = 18;
constexpr int cellshift = 12;
constexpr int hiddenshift = 14;
// constexpr int hiddenshift = 12;

// layer_norm
extern int ln_cnt;

// 20 bit
// constexpr int lnin_shifts[2] = {13, 16};
// constexpr int lnout_shifts[2] = {17, 16};
// constexpr int ln_idx[2] = {0, 512};
// constexpr qaint ln_aves[512 + 512] = {-40428, 110185, 1851, 42949, 57662, -53088, -51210, -10377, 45309, 38919, -39410, -36467, 70157, 11769, 27892, -16774, 17899, -19670, 51588, 666, -66234, -19246, -3689, 25121, 25050, 51415, -123089, 4658, 59019, 21275, -21584, -59202, -82247, -64312, 6455, 17686, -3596, 30572, -80325, -32889, 26268, -75570, 71391, -76809, -37424, 15135, -11567, -119853, 14836, 19407, 46021, 21048, -36419, 69010, -44080, -3225, -61436, 686, 121231, -36842, 116501, -66554, -26311, 36061, 12776, -48603, -32219, -33636, -33989, -5637, -20365, -13676, -23501, -3709, 28315, -1200, 26418, 16958, 10232, -30799, 11709, 5435, -18351, 27277, 35293, -1055, -25590, -34943, -36756, -39617, -26810, -21475, -24198, -14828, 6073, 57655, 14057, 42400, 56310, -4597, -23103, 3218, -27104, 43644, 19479, 37185, -23954, 41591, 2180, -56887, -126480, -53411, 74476, -43365, -29407, -33428, 81541, -14708, -42026, -40885, -25363, 10507, 78850, 17044, 52400, -17788, 66596, -66021, 29166, 13068, 52220, -42111, -85719, -6441, -69378, 22254, 9359, -16278, -76560, -58491, -16455, 14279, 1879, -38153, -57188, -37906, -44462, -45895, -55269, -8475, -26576, -106689, 29938, 11347, -3039, -94868, -937, -61948, -23303, 18049, -31076, -13693, 11004, 27653, -93787, -29604, 40038, 14354, 128019, 4846, -44355, 70983, 4463, -40154, 29200, -6873, -59186, 6306, -15418, -3326, 69253, -44141, -23789, 78217, -74224, -39059, -22024, 12242, 68595, -58580, -146469, -64914, 97083, 67833, 16368, -2263, -25854, 45317, -56437, -30310, 19421, -51711, 1569, -11688, 88727, 54481, 5840, -99474, -12148, -57988, -19659, 32040, -32078, 13918, 17669, -30422, 37546, -40421, -6658, -75662, 46081, 38287, 47046, -29593, -20565, 72009, 48335, -8519, -725, 25161, 31430, 6328, 37974, 31203, 36208, -142819, -73568, 11830, 40531, -58877, -41046, -684, 3135, -74920, 5255, -90587, -378, 4762, 18914, -9817, -72230, -46999, 33641, -25212, 18196, -47654, -10435, 81248, -15865, -20812, -55281, -115524, -24664, -9299, -32980, -3369, -93114, -16689, 46080, 126739, 2863, -48217, 35382, -50266, -39393, -33201, -120134, 21624, 23807, 73883, -26285, -42770, 21914, -23200, 40707, 16691, 4112, -16589, 13264, -32721, 54386, -11118, 10390, -80696, -74343, 9171, -36776, 51318, -42395, 5319, -20012, 36536, -11168, -42588, -8943, 23501, -54311, -6010, -33138, 79450, 60050, -20643, 18254, 4603, -25591, 118485, -2474, -8353, -103303, -59741, 39315, -54503, -157879, -8939, 61795, -76407, -28310, -1541, 45179, 60665, -130, 27681, 39550, 19423, -34063, 20233, 110869, -37346, 4073, 7034, -34944, -75620, -14606, 18471, -24760, 1606, -13463, -28747, -11964, 32497, -19224, -115426, 82794, -55193, -33285, -79987, -28430, -2085, -9818, 56450, -3851, -46170, -29382, -51836, 24784, -14472, -26092, 2456, -96042, 16962, 31546, 1052, -10632, 218, -54956, -57706, -43039, 16960, 50524, 88415, -41855, -27495, -68922, 120973, -2599, 38299, -25172, -33113, -11213, -53457, -59535, -8740, -11086, 6999, -26207, -38516, 19252, 103087, -1607, 16355, -4586, 23415, 2583, 24153, -87395, -39991, -12202, 41033, -51278, 76534, 10349, -6761, -50266, -113712, 9001, -20586, 60421, -19675, 2178, 49533, -69903, 99968, 38719, -112315, 41514, 67623, -67941, -66179, -102765, -14822, -63078, 10252, 46046, -100425, -27707, 29915, -9806, -5286, 38447, -45014, 142808, -6627, 46536, -28253, 43629, 39006, 9096, -33025, -24371, 4015, 30546, 51632, -47775, 18115, -1012, -8170, -10944, -2197, 13515, 18732, 90164, 55591, -27394, -25515, -19432, 5472, 69351, 45473, 80736, 38122, 8654, -22895, -67891, -51645, 18705, 2498, -62863, 9578, 53051, -21704, -16868, -42270, -27920, -9187, -87116, 18131, -11611, 67447, -23236, -68957, -15233, -21631, -2704, -37129, -14028, -31359, -73710, -10694, -40953, 36962, 45168, 6562, 11011, -7192, -13676, -75112, -51112, 69772, 102760, -51238, 10795, 27162, 2831, 26854, 14031, 42457, 8427, 9182, 5499, 27013, -956, 36769, -12944, -4166, 16924, 15043, -8492, -3848, -6566, 12210, 23506, 22294, -25117, 30638, 12712, 7, -2445, 8136, -4727, 15079, 2881, 11826, -27761, 16428, 5987, 212, -243, 3971, 20051, -4093, 3738, 11786, 25992, -6838, 38022, -16621, 12355, -1510, 31901, 11908, 16186, -11031, 2177, 18095, -8169, 5470, -3434, 19733, 10785, 22481, 29238, 5949, 17727, -15386, 14829, 4303, 2122, 21387, -6444, 15168, 11070, -727, 15076, 21911, 10165, 6302, -14872, -124, 16649, 14958, -1179, 22885, 17307, 796, 428, 7321, 2884, -23610, 16733, 16010, 14649, 3971, 4158, -16120, 12848, 20087, 3540, 12535, 6066, 17728, 29857, -6427, -305, 19034, -4482, -3776, -2656, -11298, -2220, 13177, -299, 15386, 18786, -6145, 33013, 2625, 18438, 2763, 25345, -18914, -1686, 10994, 89, 1830, 10416, 10287, 15898, -926, -17, 12334, 13424, 13494, 11423, 15592, 17292, 1696, 6416, 2873, -17143, 4153, -413, 17389, 12987, -1926, 5752, 26259, 14551, 28334, 4311, 14399, 480, 15588, -4028, -19209, 14255, 25028, 8341, 10831, 20222, 9621, -16870, 12612, -359, 4795, 6232, 16556, 482, -3109, 20484, 12245, 4532, 22687, 11020, 14980, 19382, 2049, 11587, -1084, 25511, 40018, 17620, 954, 6037, -17946, 2797, -2431, -15869, -12539, 17366, 8116, 6900, 15518, -26295, -9725, 26065, 11172, -8198, 17428, 34, 32603, -22807, 18336, 5090, -36, -5062, 12588, 11818, 12621, 7529, 15262, 2852, -6070, 1569, 11521, 1767, 93, 1258, 266, 2629, 10877, 6336, -8862, 7417, 30437, -3812, 562, 7520, -414, 28625, 4640, 1094, 1687, 35613, 20686, 2809, 12844, 50753, 31296, -11826, 11989, 26841, 6401, 23399, 2151, 21782, 15841, 17796, -1968, 15958, -16164, -23799, 13620, -13488, 21974, -6056, 27943, 32239, 13000, 7848, 24697, 14862, 19283, -17302, 7268, 19944, 15722, 28375, 14050, 4105, 2323, 19961, 19816, 12155, -940, 20787, 8821, -3205, 3315, 11578, 33936, 28497, -1909, -578, -20718, 18117, 10869, 11817, -534, 2169, 34030, 39064, 1128, -71, 16325, 2239, 14040, 28936, 3070, 993, -1, -32, 2521, 2342, -2933, 10038, 9575, 25195, 1441, 5155, 2931, 20061, -506, 10530, 17619, 21740, 7206, -9193, -370, -3434, -1091, 4298, -18052, 13875, -2251, 843, 2392, 22979, 7767, -7522, 13994, 4605, -6618, 1257, 4012, -7659, 26941, 13692, 8985, 1362, -27760, -3729, 3727, 14989, 11707, -9690, 13462, 8637, 7355, 10844, -4741, 4414, 17367, -149, -3556, 15454, 10854, -4531, -25897, 13135, 9594, -1701, 18326, -7542, 8957, -743, -17227, 14343, 10922, -799, 19961, 11694, 20853, 4759, 13254, 2827, 17562, -14365, 95, -29348, 20690, 6404, 24856, 1845, -18498, -798, 14953, 17017, 419, 39817, 6644, -3162, 19229, 1898, 93, 13321, -2556, -937, -1195, 31088, 21339, 31183, -1589, 26808, -701, 21301, 17457, 11118, -22642, 22005, 8912, 15046, 24428, 12405, 8829, 2665, 5090, 11549, -24367, 9927, 37970, 197, 34024, -26350, 19129, -18748, 4357, 40091, 21681, 2881, 24337, 13759, 19006, 8751, -445, 35216, 9801, 3697, 906, 17590, 9807, -4814, -8994, -20302, -2226, 22661, -13928, 26084, 17685, 17810, 12576, 16190, 930, 16109, 2474, 22499, 13499, 16535, 9688, 14591, 8303, 3492, 13121, 14788, 20767, 18688, 12833, 1012, 20021, 48136, -14147, -13470, 11433, 2966, 13485, -2756, 17954, 1563, 41130, 1270, 11645, 28084, -2530, 13538, -15129, 5555, 12188, 24301, 11724, 15105, 16296, 11135, -29397, -11316, 11603, 4211, -16281, -5364, 21530, 13208, -8022, 23711, 13350, 24002, 21266, 13843, 13319, -6579, 6873, 13178, -3021, 18379, 943, -660, 280};
// constexpr qaint ln_inv_stds[512 + 512] = {36562, 14192, 15241, 21445, 81339, 29558, 40420, 24250, 36049, 36491, 16388, 47136, 24204, 78471, 71341, 46171, 32617, 42591, 29659, 26171, 21466, 16455, 20054, 48471, 31987, 31016, 19427, 39158, 24134, 15465, 27271, 20939, 13183, 67587, 80381, 37382, 22986, 42283, 63884, 24791, 30061, 43952, 28118, 55634, 76609, 16468, 13542, 30391, 8573, 30031, 60876, 26113, 36309, 38177, 41889, 21336, 25075, 22219, 13337, 31484, 27596, 65660, 32798, 35069, 27203, 12294, 41623, 61372, 81999, 20141, 54689, 41244, 63456, 35941, 13157, 18996, 44207, 22848, 63850, 13556, 38057, 72790, 57604, 37253, 46813, 35312, 30455, 25994, 37104, 68028, 82144, 22886, 18526, 17668, 42424, 34528, 50573, 22097, 50517, 22602, 51652, 24896, 44677, 45680, 32660, 24195, 23147, 22892, 28161, 45715, 39358, 62355, 23201, 33666, 27248, 47247, 32250, 20980, 31478, 65750, 49335, 33850, 25250, 40528, 17347, 57351, 39930, 15563, 47755, 21274, 44978, 63440, 20954, 84528, 17814, 58075, 31783, 22035, 26712, 93545, 18403, 36218, 55004, 25174, 58823, 44619, 74016, 33054, 45204, 27838, 66817, 29024, 18279, 40712, 43473, 24604, 23744, 25978, 45780, 46443, 47588, 24543, 49388, 25693, 58038, 45930, 44707, 54646, 17389, 38663, 35481, 18254, 19218, 58687, 16208, 23423, 12530, 45700, 38351, 39436, 37228, 21406, 23520, 57057, 40831, 48023, 33983, 74402, 28567, 55553, 26000, 18982, 20241, 32706, 32110, 35488, 76596, 24570, 32917, 12787, 36693, 32216, 25840, 60959, 14354, 60095, 83992, 44337, 35716, 25221, 35224, 49245, 31687, 41047, 57586, 48831, 60658, 55864, 42979, 15208, 12948, 24285, 18985, 32046, 41147, 67954, 18581, 38307, 44010, 17097, 22548, 33594, 61157, 21539, 10682, 9370, 16233, 40795, 22917, 23549, 33505, 43264, 20097, 19863, 70550, 29098, 41073, 20848, 19404, 21559, 17259, 14842, 14079, 39050, 61819, 54096, 25328, 19313, 19100, 21489, 26242, 8456, 20936, 19290, 41863, 80490, 52146, 34105, 30703, 26578, 44463, 36582, 24993, 18575, 38675, 35510, 54401, 34989, 30230, 33842, 32956, 50163, 43009, 20957, 62110, 32108, 41416, 38008, 21531, 33765, 51438, 31261, 29277, 53887, 11158, 50499, 47937, 31051, 36687, 41681, 20172, 34977, 21816, 48015, 51189, 36474, 26332, 37645, 32129, 47122, 43169, 43518, 57058, 80523, 98922, 51371, 31353, 36299, 26717, 56787, 21690, 27333, 47689, 79741, 12901, 29943, 53889, 40915, 34755, 31332, 41972, 35862, 24975, 16781, 10472, 52419, 31105, 24492, 33142, 43001, 38465, 69198, 37783, 32305, 29831, 53606, 49380, 26714, 35025, 46935, 64218, 16856, 23712, 14894, 26637, 25075, 29697, 36375, 39389, 67804, 31884, 26471, 53992, 31131, 16767, 30862, 32202, 41637, 40574, 55553, 47901, 24854, 43525, 28305, 29082, 37074, 26910, 24904, 59629, 32952, 25785, 19742, 44463, 24803, 20818, 80096, 19938, 58402, 46801, 37908, 69738, 64840, 42829, 19810, 32636, 32876, 25242, 37420, 17211, 46925, 16143, 67346, 27223, 23679, 20795, 16126, 20023, 64129, 48061, 10923, 31672, 65770, 28201, 45184, 31488, 34789, 27287, 14912, 39854, 34811, 23649, 39600, 24737, 45284, 16637, 31805, 26290, 34459, 24520, 32387, 33021, 23824, 15248, 31425, 40896, 56499, 56692, 39045, 16802, 19713, 47624, 35049, 15874, 14263, 12253, 30884, 41965, 25661, 32912, 30546, 26402, 29120, 41937, 52654, 39578, 73794, 48788, 68845, 30915, 9987, 36141, 21331, 42354, 34361, 49836, 24996, 19834, 36409, 28770, 37340, 28636, 71119, 21684, 31333, 27658, 17453, 60086, 33456, 20062, 38705, 22125, 60969, 30456, 23467, 23608, 33433, 59045, 59810, 37569, 19548, 32662, 56957, 26706, 22759, 54342, 23950, 68117, 27040, 9069, 23923, 40346, 42269, 86748, 34310, 19989, 29610, 51596, 35325, 18054, 29874, 44044, 22135, 52807, 106582, 98845, 40422, 76499, 91538, 72522, 148096, 68412, 49376, 49497, 79227, 96206, 60192, 69529, 203299, 114446, 89483, 41511, 83049, 54358, 39530, 77248, 100939664, 211996, 72614, 46787, 88852, 66198, 37326, 60293, 40425, 40555, 252773, 45515, 222524, 119232, 147298, 51312, 251665, 42363, 53654, 63835, 51663, 39935, 65469, 47887, 37091, 82358, 113810, 165780, 55883, 101921, 54286, 199257, 113775, 180348, 93657, 40794, 96234, 83742, 53023, 89310, 348666, 300452, 175527, 139667, 79428, 84613, 66851, 85348, 110735, 154369, 97236, 47736, 67448, 138809, 47157, 68309, 37641, 109509, 52298, 178037, 53113, 255067, 68525, 49979, 107471, 113046, 78605, 477899, 181021, 39104, 88110, 82986, 47609, 63676, 40505, 58001, 71894, 68259, 43617, 70452, 63373, 123776, 315979, 70015, 81899, 72925, 85900, 89514, 68849, 45548, 69307, 40627, 63321, 110973, 60186, 62761, 83326, 66935, 80905, 78095, 183576, 38416, 63998, 125098528, 90522, 147034, 78216, 87780, 47597, 85796, 169453, 38412, 61340, 51336, 63137, 65988, 107284, 167091, 59116, 242580, 82035, 98603, 51693, 288849, 39242, 2870044, 77519, 61658, 50692, 81419, 124848, 106012, 88985, 64943, 65165, 57757, 86225, 137267, 40985, 319791, 54107, 73563, 123179, 92450, 47918, 72358, 43882, 76724, 74322, 36923, 141077, 53990, 67588, 42412, 48898, 58617, 66685, 218174, 50568, 105723, 135758, 198926, 88262, 96375, 232881, 52970, 104822, 55185, 49081, 99926, 79830, 51744, 97434, 67315, 51216, 58361, 66054, 57960, 252746, 52390, 86427, 75178, 83470, 58705, 113517, 138713, 256141, 104580, 81187, 52651, 19582340, 70908, 76474, 443681, 142733, 64992, 49740, 63309, 43520, 70326, 66322, 175036, 46235, 40586, 110749, 64295, 73457, 59913, 67417, 684614, 37507, 52277, 132184, 50341, 46436, 43635, 40712, 53541, 104153, 98571, 112784, 109076, 144717, 90490, 50432, 79499, 50989, 200633, 53553, 60526, 42147, 67438, 102239, 71735, 39957, 123341, 121929, 207404, 41977, 90888, 38260, 51728, 109655, 100547, 65043, 83439, 142717, 80826, 71566, 46888, 35931, 280474, 90850, 38557, 57715, 41320, 69802, 1893270, 117842, 105068, 35092, 73035, 66981, 65996, 47498, 42990, 661725, 23867328, 79902, 772657, 127550, 44446, 70778, 161117, 67929, 128337, 602219, 65100, 180719, 94080, 87631, 42714, 1273818, 100250, 80046, 101859, 120793, 81284, 107973, 95586, 218238, 59595, 67119, 126457, 66426, 39690, 77608, 91088, 66175, 2001594, 61201, 98407, 69571, 242928, 91234, 42875, 237595, 1198269, 60846, 48325, 121220, 88282, 109527, 41542, 55395, 373954, 69822, 97341, 59719, 47048, 86008, 87470, 60740, 98035, 71640, 420174, 51310, 66613, 62209, 83468, 85127, 191709, 53631, 47451, 54368, 68848, 80209, 83503, 39862, 67793, 53951, 42767, 81670, 2393143, 101881, 85368, 119740, 61754, 54248, 51965, 38783, 159501, 20794372, 69288, 64407, 42845, 44598, 79237, 66016, 510191, 49374, 38710, 2159742, 50983, 327978, 248899, 105868, 97653, 11762307, 89713, 61065, 1547466, 149051, 104497, 105696, 47508, 711767, 38710, 46992, 54631, 94188, 38136, 55651, 37097, 103291, 87401, 39985, 65915, 52029, 65025, 41128, 91015, 56929, 78322, 46466, 59208, 49200, 54759, 100134, 217421, 160755, 54230, 94625, 39965, 63213, 94578, 41728, 180576, 67749, 45407, 38079, 232289, 2607274, 67562, 57804, 71045, 133413, 67200, 166052, 99186, 50460, 150772, 99840, 51679, 55927, 105692, 66182, 97216, 44434, 101225, 85702, 164878, 172623, 61151, 108155, 102205, 82150, 113826, 94411, 69801, 90025, 151820, 75461, 71109, 174595, 58580, 41341, 56094, 92004, 69036, 38519, 71000, 44762, 155343, 100046, 115506, 517554, 39001, 80117, 368781, 91822, 116637, 79536, 111232, 67703, 93724, 56872, 212915, 98622, 71925, 183074, 64271, 46895, 41566, 133768, 93055, 39302, 44260, 74761, 96918, 66578, 53638, 55308, 139144, 66250, 42243, 2132668, 69635, 65990};

// 16 bit
// constexpr int lnin_shifts[2] = {9, 12};
// constexpr int lnout_shifts[2] = {13, 12};
constexpr int lnout_shifts[2] = {12, 12};
// constexpr int ln_idx[2] = {0, 512};
// constexpr qaint ln_aves[512 + 512] = {-2527, 6887, 116, 2684, 3604, -3318, -3201, -649, 2832, 2432, -2463, -2279, 4385, 736, 1743, -1048, 1119, -1229, 3224, 42, -4140, -1203, -231, 1570, 1566, 3213, -7693, 291, 3689, 1330, -1349, -3700, -5140, -4019, 403, 1105, -225, 1911, -5020, -2056, 1642, -4723, 4462, -4801, -2339, 946, -723, -7491, 927, 1213, 2876, 1316, -2276, 4313, -2755, -202, -3840, 43, 7577, -2303, 7281, -4160, -1644, 2254, 798, -3038, -2014, -2102, -2124, -352, -1273, -855, -1469, -232, 1770, -75, 1651, 1060, 640, -1925, 732, 340, -1147, 1705, 2206, -66, -1599, -2184, -2297, -2476, -1676, -1342, -1512, -927, 380, 3603, 879, 2650, 3519, -287, -1444, 201, -1694, 2728, 1217, 2324, -1497, 2599, 136, -3555, -7905, -3338, 4655, -2710, -1838, -2089, 5096, -919, -2627, -2555, -1585, 657, 4928, 1065, 3275, -1112, 4162, -4126, 1823, 817, 3264, -2632, -5357, -403, -4336, 1391, 585, -1017, -4785, -3656, -1028, 892, 117, -2385, -3574, -2369, -2779, -2868, -3454, -530, -1661, -6668, 1871, 709, -190, -5929, -59, -3872, -1456, 1128, -1942, -856, 688, 1728, -5862, -1850, 2502, 897, 8001, 303, -2772, 4436, 279, -2510, 1825, -430, -3699, 394, -964, -208, 4328, -2759, -1487, 4889, -4639, -2441, -1376, 765, 4287, -3661, -9154, -4057, 6068, 4240, 1023, -141, -1616, 2832, -3527, -1894, 1214, -3232, 98, -731, 5545, 3405, 365, -6217, -759, -3624, -1229, 2003, -2005, 870, 1104, -1901, 2347, -2526, -416, -4729, 2880, 2393, 2940, -1850, -1285, 4501, 3021, -532, -45, 1573, 1964, 396, 2373, 1950, 2263, -8926, -4598, 739, 2533, -3680, -2565, -43, 196, -4682, 328, -5662, -24, 298, 1182, -614, -4514, -2937, 2103, -1576, 1137, -2978, -652, 5078, -992, -1301, -3455, -7220, -1541, -581, -2061, -211, -5820, -1043, 2880, 7921, 179, -3014, 2211, -3142, -2462, -2075, -7508, 1351, 1488, 4618, -1643, -2673, 1370, -1450, 2544, 1043, 257, -1037, 829, -2045, 3399, -695, 649, -5043, -4646, 573, -2298, 3207, -2650, 332, -1251, 2284, -698, -2662, -559, 1469, -3394, -376, -2071, 4966, 3753, -1290, 1141, 288, -1599, 7405, -155, -522, -6456, -3734, 2457, -3406, -9867, -559, 3862, -4775, -1769, -96, 2824, 3792, -8, 1730, 2472, 1214, -2129, 1265, 6929, -2334, 255, 440, -2184, -4726, -913, 1154, -1547, 100, -841, -1797, -748, 2031, -1201, -7214, 5175, -3450, -2080, -4999, -1777, -130, -614, 3528, -241, -2886, -1836, -3240, 1549, -904, -1631, 154, -6003, 1060, 1972, 66, -665, 14, -3435, -3607, -2690, 1060, 3158, 5526, -2616, -1718, -4308, 7561, -162, 2394, -1573, -2070, -701, -3341, -3721, -546, -693, 437, -1638, -2407, 1203, 6443, -100, 1022, -287, 1463, 161, 1510, -5462, -2499, -763, 2565, -3205, 4783, 647, -423, -3142, -7107, 563, -1287, 3776, -1230, 136, 3096, -4369, 6248, 2420, -7020, 2595, 4226, -4246, -4136, -6423, -926, -3942, 641, 2878, -6277, -1732, 1870, -613, -330, 2403, -2813, 8926, -414, 2908, -1766, 2727, 2438, 568, -2064, -1523, 251, 1909, 3227, -2986, 1132, -63, -511, -684, -137, 845, 1171, 5635, 3474, -1712, -1595, -1214, 342, 4334, 2842, 5046, 2383, 541, -1431, -4243, -3228, 1169, 156, -3929, 599, 3316, -1357, -1054, -2642, -1745, -574, -5445, 1133, -726, 4215, -1452, -4310, -952, -1352, -169, -2321, -877, -1960, -4607, -668, -2560, 2310, 2823, 410, 688, -449, -855, -4695, -3194, 4361, 6422, -3202, 675, 1698, 177, 1678, 877, 2654, 527, 574, 344, 1688, -60, 2298, -809, -260, 1058, 940, -531, -240, -410, 763, 1469, 1393, -1570, 1915, 795, 0, -153, 509, -295, 942, 180, 739, -1735, 1027, 374, 13, -15, 248, 1253, -256, 234, 737, 1624, -427, 2376, -1039, 772, -94, 1994, 744, 1012, -689, 136, 1131, -511, 342, -215, 1233, 674, 1405, 1827, 372, 1108, -962, 927, 269, 133, 1337, -403, 948, 692, -45, 942, 1369, 635, 394, -929, -8, 1041, 935, -74, 1430, 1082, 50, 27, 458, 180, -1476, 1046, 1001, 916, 248, 260, -1007, 803, 1255, 221, 783, 379, 1108, 1866, -402, -19, 1190, -280, -236, -166, -706, -139, 824, -19, 962, 1174, -384, 2063, 164, 1152, 173, 1584, -1182, -105, 687, 6, 114, 651, 643, 994, -58, -1, 771, 839, 843, 714, 975, 1081, 106, 401, 180, -1071, 260, -26, 1087, 812, -120, 359, 1641, 909, 1771, 269, 900, 30, 974, -252, -1201, 891, 1564, 521, 677, 1264, 601, -1054, 788, -22, 300, 390, 1035, 30, -194, 1280, 765, 283, 1418, 689, 936, 1211, 128, 724, -68, 1594, 2501, 1101, 60, 377, -1122, 175, -152, -992, -784, 1085, 507, 431, 970, -1643, -608, 1629, 698, -512, 1089, 2, 2038, -1425, 1146, 318, -2, -316, 787, 739, 789, 471, 954, 178, -379, 98, 720, 110, 6, 79, 17, 164, 680, 396, -554, 464, 1902, -238, 35, 470, -26, 1789, 290, 68, 105, 2226, 1293, 176, 803, 3172, 1956, -739, 749, 1678, 400, 1462, 134, 1361, 990, 1112, -123, 997, -1010, -1487, 851, -843, 1373, -379, 1746, 2015, 813, 490, 1544, 929, 1205, -1081, 454, 1247, 983, 1773, 878, 257, 145, 1248, 1239, 760, -59, 1299, 551, -200, 207, 724, 2121, 1781, -119, -36, -1295, 1132, 679, 739, -33, 136, 2127, 2442, 71, -4, 1020, 140, 877, 1808, 192, 62, 0, -2, 158, 146, -183, 627, 598, 1575, 90, 322, 183, 1254, -32, 658, 1101, 1359, 450, -575, -23, -215, -68, 269, -1128, 867, -141, 53, 150, 1436, 485, -470, 875, 288, -414, 79, 251, -479, 1684, 856, 562, 85, -1735, -233, 233, 937, 732, -606, 841, 540, 460, 678, -296, 276, 1085, -9, -222, 966, 678, -283, -1619, 821, 600, -106, 1145, -471, 560, -46, -1077, 896, 683, -50, 1248, 731, 1303, 297, 828, 177, 1098, -898, 6, -1834, 1293, 400, 1554, 115, -1156, -50, 935, 1064, 26, 2489, 415, -198, 1202, 119, 6, 833, -160, -59, -75, 1943, 1334, 1949, -99, 1675, -44, 1331, 1091, 695, -1415, 1375, 557, 940, 1527, 775, 552, 167, 318, 722, -1523, 620, 2373, 12, 2126, -1647, 1196, -1172, 272, 2506, 1355, 180, 1521, 860, 1188, 547, -28, 2201, 613, 231, 57, 1099, 613, -301, -562, -1269, -139, 1416, -871, 1630, 1105, 1113, 786, 1012, 58, 1007, 155, 1406, 844, 1033, 605, 912, 519, 218, 820, 924, 1298, 1168, 802, 63, 1251, 3009, -884, -842, 715, 185, 843, -172, 1122, 98, 2571, 79, 728, 1755, -158, 846, -946, 347, 762, 1519, 733, 944, 1019, 696, -1837, -707, 725, 263, -1018, -335, 1346, 826, -501, 1482, 834, 1500, 1329, 865, 832, -411, 430, 824, -189, 1149, 59, -41, 17};
// constexpr qaint ln_inv_stds[512 + 512] = {2285, 887, 953, 1340, 5084, 1847, 2526, 1516, 2253, 2281, 1024, 2946, 1513, 4904, 4459, 2886, 2039, 2662, 1854, 1636, 1342, 1028, 1253, 3029, 1999, 1938, 1214, 2447, 1508, 967, 1704, 1309, 824, 4224, 5024, 2336, 1437, 2643, 3993, 1549, 1879, 2747, 1757, 3477, 4788, 1029, 846, 1899, 536, 1877, 3805, 1632, 2269, 2386, 2618, 1333, 1567, 1389, 834, 1968, 1725, 4104, 2050, 2192, 1700, 768, 2601, 3836, 5125, 1259, 3418, 2578, 3966, 2246, 822, 1187, 2763, 1428, 3991, 847, 2379, 4549, 3600, 2328, 2926, 2207, 1903, 1625, 2319, 4252, 5134, 1430, 1158, 1104, 2651, 2158, 3161, 1381, 3157, 1413, 3228, 1556, 2792, 2855, 2041, 1512, 1447, 1431, 1760, 2857, 2460, 3897, 1450, 2104, 1703, 2953, 2016, 1311, 1967, 4109, 3083, 2116, 1578, 2533, 1084, 3584, 2496, 973, 2985, 1330, 2811, 3965, 1310, 5283, 1113, 3630, 1986, 1377, 1669, 5847, 1150, 2264, 3438, 1573, 3676, 2789, 4626, 2066, 2825, 1740, 4176, 1814, 1142, 2545, 2717, 1538, 1484, 1624, 2861, 2903, 2974, 1534, 3087, 1606, 3627, 2871, 2794, 3415, 1087, 2416, 2218, 1141, 1201, 3668, 1013, 1464, 783, 2856, 2397, 2465, 2327, 1338, 1470, 3566, 2552, 3001, 2124, 4650, 1785, 3472, 1625, 1186, 1265, 2044, 2007, 2218, 4787, 1536, 2057, 799, 2293, 2013, 1615, 3810, 897, 3756, 5249, 2771, 2232, 1576, 2202, 3078, 1980, 2565, 3599, 3052, 3791, 3491, 2686, 950, 809, 1518, 1187, 2003, 2572, 4247, 1161, 2394, 2751, 1069, 1409, 2100, 3822, 1346, 668, 586, 1015, 2550, 1432, 1472, 2094, 2704, 1256, 1241, 4409, 1819, 2567, 1303, 1213, 1347, 1079, 928, 880, 2441, 3864, 3381, 1583, 1207, 1194, 1343, 1640, 528, 1309, 1206, 2616, 5031, 3259, 2132, 1919, 1661, 2779, 2286, 1562, 1161, 2417, 2219, 3400, 2187, 1889, 2115, 2060, 3135, 2688, 1310, 3882, 2007, 2588, 2376, 1346, 2110, 3215, 1954, 1830, 3368, 697, 3156, 2996, 1941, 2293, 2605, 1261, 2186, 1363, 3001, 3199, 2280, 1646, 2353, 2008, 2945, 2698, 2720, 3566, 5033, 6183, 3211, 1960, 2269, 1670, 3549, 1356, 1708, 2981, 4984, 806, 1871, 3368, 2557, 2172, 1958, 2623, 2241, 1561, 1049, 655, 3276, 1944, 1531, 2071, 2688, 2404, 4325, 2361, 2019, 1864, 3350, 3086, 1670, 2189, 2933, 4014, 1053, 1482, 931, 1665, 1567, 1856, 2273, 2462, 4238, 1993, 1654, 3374, 1946, 1048, 1929, 2013, 2602, 2536, 3472, 2994, 1553, 2720, 1769, 1818, 2317, 1682, 1556, 3727, 2060, 1612, 1234, 2779, 1550, 1301, 5006, 1246, 3650, 2925, 2369, 4359, 4052, 2677, 1238, 2040, 2055, 1578, 2339, 1076, 2933, 1009, 4209, 1701, 1480, 1300, 1008, 1251, 4008, 3004, 683, 1980, 4111, 1763, 2824, 1968, 2174, 1705, 932, 2491, 2176, 1478, 2475, 1546, 2830, 1040, 1988, 1643, 2154, 1532, 2024, 2064, 1489, 953, 1964, 2556, 3531, 3543, 2440, 1050, 1232, 2976, 2191, 992, 891, 766, 1930, 2623, 1604, 2057, 1909, 1650, 1820, 2621, 3291, 2474, 4612, 3049, 4303, 1932, 624, 2259, 1333, 2647, 2148, 3115, 1562, 1240, 2276, 1798, 2334, 1790, 4445, 1355, 1958, 1729, 1091, 3755, 2091, 1254, 2419, 1383, 3811, 1904, 1467, 1476, 2090, 3690, 3738, 2348, 1222, 2041, 3560, 1669, 1422, 3396, 1497, 4257, 1690, 567, 1495, 2522, 2642, 5422, 2144, 1249, 1851, 3225, 2208, 1128, 1867, 2753, 1383, 3300, 6661, 6178, 2526, 4781, 5721, 4533, 9256, 4276, 3086, 3094, 4952, 6013, 3762, 4346, 12706, 7153, 5593, 2594, 5191, 3397, 2471, 4828, 6308729, 13250, 4538, 2924, 5553, 4137, 2333, 3768, 2527, 2535, 15798, 2845, 13908, 7452, 9206, 3207, 15729, 2648, 3353, 3990, 3229, 2496, 4092, 2993, 2318, 5147, 7113, 10361, 3493, 6370, 3393, 12454, 7111, 11272, 5854, 2550, 6015, 5234, 3314, 5582, 21792, 18778, 10970, 8729, 4964, 5288, 4178, 5334, 6921, 9648, 6077, 2984, 4215, 8676, 2947, 4269, 2353, 6844, 3269, 11127, 3320, 15942, 4283, 3124, 6717, 7065, 4913, 29869, 11314, 2444, 5507, 5187, 2976, 3980, 2532, 3625, 4493, 4266, 2726, 4403, 3961, 7736, 19749, 4376, 5119, 4558, 5369, 5595, 4303, 2847, 4332, 2539, 3958, 6936, 3762, 3923, 5208, 4183, 5057, 4881, 11473, 2401, 4000, 7818658, 5658, 9190, 4889, 5486, 2975, 5362, 10591, 2401, 3834, 3209, 3946, 4124, 6705, 10443, 3695, 15161, 5127, 6163, 3231, 18053, 2453, 179378, 4845, 3854, 3168, 5089, 7803, 6626, 5562, 4059, 4073, 3610, 5389, 8579, 2562, 19987, 3382, 4598, 7699, 5778, 2995, 4522, 2743, 4795, 4645, 2308, 8817, 3374, 4224, 2651, 3056, 3664, 4168, 13636, 3161, 6608, 8485, 12433, 5516, 6023, 14555, 3311, 6551, 3449, 3068, 6245, 4989, 3234, 6090, 4207, 3201, 3648, 4128, 3623, 15797, 3274, 5402, 4699, 5217, 3669, 7095, 8670, 16009, 6536, 5074, 3291, 1223896, 4432, 4780, 27730, 8921, 4062, 3109, 3957, 2720, 4395, 4145, 10940, 2890, 2537, 6922, 4018, 4591, 3745, 4214, 42788, 2344, 3267, 8261, 3146, 2902, 2727, 2545, 3346, 6510, 6161, 7049, 6817, 9045, 5656, 3152, 4969, 3187, 12540, 3347, 3783, 2634, 4215, 6390, 4483, 2497, 7709, 7621, 12963, 2624, 5681, 2391, 3233, 6853, 6284, 4065, 5215, 8920, 5052, 4473, 2931, 2246, 17530, 5678, 2410, 3607, 2583, 4363, 118329, 7365, 6567, 2193, 4565, 4186, 4125, 2969, 2687, 41358, 1491708, 4994, 48291, 7972, 2778, 4424, 10070, 4246, 8021, 37639, 4069, 11295, 5880, 5477, 2670, 79614, 6266, 5003, 6366, 7550, 5080, 6748, 5974, 13640, 3725, 4195, 7904, 4152, 2481, 4850, 5693, 4136, 125100, 3825, 6150, 4348, 15183, 5702, 2680, 14850, 74892, 3803, 3020, 7576, 5518, 6845, 2596, 3462, 23372, 4364, 6084, 3732, 2941, 5376, 5467, 3796, 6127, 4478, 26261, 3207, 4163, 3888, 5217, 5320, 11982, 3352, 2966, 3398, 4303, 5013, 5219, 2491, 4237, 3372, 2673, 5104, 149571, 6368, 5336, 7484, 3860, 3391, 3248, 2424, 9969, 1299648, 4331, 4025, 2678, 2787, 4952, 4126, 31887, 3086, 2419, 134984, 3186, 20499, 15556, 6617, 6103, 735144, 5607, 3817, 96717, 9316, 6531, 6606, 2969, 44485, 2419, 2937, 3414, 5887, 2384, 3478, 2319, 6456, 5463, 2499, 4120, 3252, 4064, 2570, 5688, 3558, 4895, 2904, 3700, 3075, 3422, 6258, 13589, 10047, 3389, 5914, 2498, 3951, 5911, 2608, 11286, 4234, 2838, 2380, 14518, 162955, 4223, 3613, 4440, 8338, 4200, 10378, 6199, 3154, 9423, 6240, 3230, 3495, 6606, 4136, 6076, 2777, 6327, 5356, 10305, 10789, 3822, 6760, 6388, 5134, 7114, 5901, 4363, 5627, 9489, 4716, 4444, 10912, 3661, 2584, 3506, 5750, 4315, 2407, 4438, 2798, 9709, 6253, 7219, 32347, 2438, 5007, 23049, 5739, 7290, 4971, 6952, 4231, 5858, 3555, 13307, 6164, 4495, 11442, 4017, 2931, 2598, 8360, 5816, 2456, 2766, 4673, 6057, 4161, 3352, 3457, 8696, 4141, 2640, 133292, 4352, 4124};

// activation

// 10 bit -> 20 bit
// typedef unsigned short qtint;
// constexpr int tbbit = 10;
// constexpr int tbshift = 7;
// constexpr int sigshift = 20;
// constexpr int celushift = 20;
// constexpr qaint celu_table[1024] = {0, -8160, -16257, -24290, -32261, -40170, -48018, -55804, -63530, -71196, -78802, -86349, -93837, -101267, -108639, -115953, -123211, -130412, -137557, -144647, -151681, -158661, -165586, -172458, -179276, -186041, -192753, -199413, -206022, -212578, -219084, -225539, -231944, -238299, -244605, -250861, -257069, -263229, -269340, -275405, -281421, -287391, -293315, -299193, -305024, -310811, -316552, -322249, -327901, -333509, -339074, -344595, -350074, -355510, -360903, -366255, -371564, -376833, -382061, -387247, -392394, -397500, -402567, -407594, -412583, -417532, -422443, -427315, -432150, -436947, -441707, -446429, -451115, -455765, -460378, -464956, -469497, -474004, -478475, -482912, -487314, -491681, -496015, -500315, -504582, -508815, -513016, -517184, -521319, -525422, -529493, -533533, -537541, -541518, -545464, -549379, -553264, -557118, -560943, -564738, -568503, -572239, -575946, -579624, -583273, -586894, -590487, -594052, -597589, -601099, -604581, -608036, -611464, -614866, -618241, -621590, -624913, -628210, -631481, -634727, -637948, -641143, -644314, -647460, -650581, -653679, -656752, -659801, -662826, -665828, -668807, -671762, -674695, -677604, -680491, -683356, -686198, -689018, -691816, -694592, -697347, -700080, -702792, -705483, -708153, -710802, -713431, -716039, -718627, -721195, -723742, -726270, -728778, -731267, -733736, -736186, -738618, -741030, -743423, -745798, -748154, -750492, -752812, -755113, -757397, -759663, -761911, -764142, -766356, -768552, -770731, -772893, -775039, -777167, -779279, -781375, -783454, -785518, -787565, -789596, -791611, -793611, -795595, -797564, -799517, -801456, -803379, -805287, -807180, -809059, -810923, -812772, -814607, -816428, -818234, -820027, -821806, -823570, -825321, -827059, -828783, -830493, -832190, -833874, -835545, -837203, -838848, -840480, -842099, -843706, -845300, -846882, -848452, -850009, -851554, -853088, -854609, -856118, -857616, -859102, -860577, -862040, -863491, -864932, -866361, -867779, -869186, -870582, -871967, -873341, -874705, -876058, -877401, -878733, -880055, -881366, -882667, -883958, -885239, -886510, -887772, -889023, -890265, -891497, -892719, -893932, -895135, -896330, -897514, -898690, -899856, -901014, -902162, -903301, -904432, -905554, -906667, -907771, -908867, -909954, -911033, -912103, -913165, -914219, -915265, -916302, -917331, -918353, -919366, -920372, -921369, -922359, -923341, -924316, -925283, -926243, -927195, -928139, -929076, -930006, -930929, -931845, -932753, -933654, -934549, -935436, -936316, -937190, -938057, -938917, -939770, -940617, -941457, -942291, -943118, -943939, -944753, -945561, -946363, -947158, -947947, -948730, -949507, -950278, -951043, -951802, -952555, -953303, -954044, -954780, -955510, -956234, -956952, -957665, -958373, -959075, -959771, -960462, -961148, -961829, -962504, -963173, -963838, -964498, -965152, -965801, -966445, -967084, -967719, -968348, -968972, -969592, -970206, -970816, -971421, -972022, -972617, -973209, -973795, -974377, -974954, -975527, -976096, -976660, -977220, -977775, -978326, -978872, -979415, -979953, -980487, -981017, -981543, -982064, -982582, -983096, -983605, -984111, -984612, -985110, -985604, -986094, -986580, -987063, -987542, -988017, -988488, -988955, -989419, -989880, -990337, -990790, -991239, -991686, -992128, -992568, -993004, -993436, -993865, -994291, -994713, -995132, -995548, -995961, -996370, -996777, -997180, -997580, -997977, -998370, -998761, -999149, -999533, -999915, -1000294, -1000670, -1001042, -1001412, -1001779, -1002143, -1002505, -1002863, -1003219, -1003572, -1003922, -1004270, -1004615, -1004957, -1005296, -1005633, -1005967, -1006299, -1006628, -1006954, -1007278, -1007599, -1007918, -1008235, -1008549, -1008860, -1009169, -1009476, -1009780, -1010082, -1010382, -1010679, -1010974, -1011266, -1011557, -1011845, -1012131, -1012414, -1012696, -1012975, -1013252, -1013527, -1013800, -1014070, -1014339, -1014605, -1014870, -1015132, -1015392, -1015650, -1015907, -1016161, -1016413, -1016663, -1016912, -1017158, -1017403, -1017645, -1017886, -1018125, -1018362, -1018597, -1018830, -1019062, -1019291, -1019519, -1019745, -1019970, -1020192, -1020413, -1020632, -1020850, -1021066, -1021280, -1021492, -1021703, -1021912, -1022120, -1022325, -1022530, -1022732, -1022934, -1023133, -1023331, -1023528, -1023722, -1023916, -1024108, -1024298, -1024487, -1024675, -1024861, -1025045, -1025228, -1025410, -1025590, -1025769, -1025947, -1026123, -1026297, -1026471, -1026643, -1026813, -1026983, -1027151, -1027318, -1027483, -1027647, -1027810, -1027972, -1028132, -1028291, -1028449, -1028606, -1028761, -1028915, -1029068, -1029220, -1029371, -1029520, -1029668, -1029816, -1029962, -1030106, -1030250, -1030393, -1030534, -1030675, -1030814, -1030952, -1031089, -1031225, -1031360, -1031494, -1031627, -1031759, -1031890, -1032020, -1032149, -1032277, -1032403, -1032529, -1032654, -1032778, -1032901, -1033023, -1033144, -1033264, -1033383, -1033502, -1033619, -1033735, -1033851, -1033965, -1034079, -1034192, -1034304, -1034415, -1034525, -1034634, -1034743, -1034851, -1034957, -1035063, -1035169, -1035273, -1035376, -1035479, -1035581, -1035682, -1035782, -1035882, -1035981, -1036079, -1036176, -1036273, -1036368, -1036463, -1036558, -1036651, -1036744, -1036836, -1036927, -1037018, -1037108, -1037197, -1037286, -1037374, -1037461, -1037547, -1037633, -1037718, -1037803, -1037887, -1037970, -1038052, -1038134, -1038215, -1038296, -1038376, -1038455, -1038534, -1038612, -1038690, -1038767, -1038843, -1038919, -1038994, -1039069, -1039143, -1039216, -1039289, -1039361, -1039433, -1039504, -1039575, -1039645, -1039714, -1039783, -1039852, -1039919, -1039987, -1040054, -1040120, -1040186, -1040251, -1040316, -1040380, -1040444, -1040507, -1040570, -1040632, -1040694, -1040755, -1040816, -1040877, -1040937, -1040996, -1041055, -1041114, -1041172, -1041229, -1041286, -1041343, -1041399, -1041455, -1041511, -1041566, -1041620, -1041674, -1041728, -1041781, -1041834, -1041887, -1041939, -1041990, -1042042, -1042093, -1042143, -1042193, -1042243, -1042292, -1042341, -1042389, -1042438, -1042485, -1042533, -1042580, -1042626, -1042673, -1042719, -1042764, -1042810, -1042854, -1042899, -1042943, -1042987, -1043030, -1043074, -1043116, -1043159, -1043201, -1043243, -1043284, -1043326, -1043366, -1043407, -1043447, -1043487, -1043527, -1043566, -1043605, -1043644, -1043682, -1043720, -1043758, -1043795, -1043833, -1043870, -1043906, -1043942, -1043979, -1044014, -1044050, -1044085, -1044120, -1044155, -1044189, -1044223, -1044257, -1044291, -1044324, -1044357, -1044390, -1044423, -1044455, -1044487, -1044519, -1044550, -1044582, -1044613, -1044644, -1044674, -1044705, -1044735, -1044765, -1044794, -1044824, -1044853, -1044882, -1044911, -1044939, -1044967, -1044996, -1045023, -1045051, -1045078, -1045106, -1045133, -1045159, -1045186, -1045212, -1045239, -1045265, -1045290, -1045316, -1045341, -1045366, -1045391, -1045416, -1045441, -1045465, -1045489, -1045513, -1045537, -1045561, -1045584, -1045608, -1045631, -1045654, -1045676, -1045699, -1045721, -1045744, -1045766, -1045788, -1045809, -1045831, -1045852, -1045873, -1045894, -1045915, -1045936, -1045956, -1045977, -1045997, -1046017, -1046037, -1046057, -1046076, -1046096, -1046115, -1046134, -1046153, -1046172, -1046191, -1046209, -1046228, -1046246, -1046264, -1046282, -1046300, -1046318, -1046335, -1046353, -1046370, -1046387, -1046404, -1046421, -1046438, -1046455, -1046471, -1046488, -1046504, -1046520, -1046536, -1046552, -1046568, -1046583, -1046599, -1046614, -1046629, -1046644, -1046659, -1046674, -1046689, -1046704, -1046718, -1046733, -1046747, -1046761, -1046776, -1046790, -1046804, -1046817, -1046831, -1046845, -1046858, -1046871, -1046885, -1046898, -1046911, -1046924, -1046937, -1046949, -1046962, -1046975, -1046987, -1047000, -1047012, -1047024, -1047036, -1047048, -1047060, -1047072, -1047083, -1047095, -1047107, -1047118, -1047129, -1047141, -1047152, -1047163, -1047174, -1047185, -1047196, -1047206, -1047217, -1047228, -1047238, -1047248, -1047259, -1047269, -1047279, -1047289, -1047299, -1047309, -1047319, -1047329, -1047339, -1047348, -1047358, -1047367, -1047377, -1047386, -1047395, -1047404, -1047414, -1047423, -1047432, -1047441, -1047449, -1047458, -1047467, -1047475, -1047484, -1047493, -1047501, -1047509, -1047518, -1047526, -1047534, -1047542, -1047550, -1047558, -1047566, -1047574, -1047582, -1047589, -1047597, -1047605, -1047612, -1047620, -1047627, -1047635, -1047642, -1047649, -1047656, -1047664, -1047671, -1047678, -1047685, -1047692, -1047699, -1047705, -1047712, -1047719, -1047726, -1047732, -1047739, -1047745, -1047752, -1047758, -1047765, -1047771, -1047777, -1047783, -1047789, -1047796, -1047802, -1047808, -1047814, -1047820, -1047825, -1047831, -1047837, -1047843, -1047849, -1047854, -1047860, -1047865, -1047871, -1047876, -1047882, -1047887, -1047893, -1047898, -1047903, -1047908, -1047914, -1047919, -1047924, -1047929, -1047934, -1047939, -1047944, -1047949, -1047954, -1047959, -1047963, -1047968, -1047973, -1047978, -1047982, -1047987, -1047992, -1047996, -1048001, -1048005, -1048009, -1048014, -1048018, -1048023, -1048027, -1048031, -1048035, -1048040, -1048044, -1048048, -1048052, -1048056, -1048060, -1048064, -1048068, -1048072, -1048076, -1048080, -1048084, -1048088, -1048091, -1048095, -1048099, -1048103, -1048106, -1048110, -1048114, -1048117, -1048121, -1048124, -1048128, -1048131, -1048135, -1048138, -1048142, -1048145, -1048148, -1048152, -1048155, -1048158, -1048162, -1048165, -1048168, -1048171, -1048174, -1048177, -1048181, -1048184, -1048187, -1048190, -1048193, -1048196, -1048199, -1048202, -1048204, -1048207, -1048210, -1048213, -1048216, -1048219, -1048221};
// constexpr qaint Sigmoid_table[1024] = {524288, 526336, 528384, 530432, 532479, 534527, 536574, 538620, 540667, 542712, 544758, 546802, 548846, 550889, 552931, 554973, 557013, 559053, 561091, 563129, 565165, 567200, 569233, 571266, 573297, 575326, 577354, 579380, 581404, 583427, 585448, 587467, 589485, 591500, 593513, 595525, 597534, 599541, 601545, 603548, 605548, 607545, 609540, 611533, 613523, 615510, 617495, 619477, 621456, 623432, 625405, 627376, 629343, 631307, 633268, 635226, 637181, 639132, 641080, 643025, 644966, 646904, 648838, 650769, 652696, 654619, 656539, 658455, 660367, 662275, 664179, 666079, 667975, 669867, 671755, 673639, 675519, 677394, 679266, 681133, 682995, 684853, 686707, 688556, 690401, 692241, 694076, 695907, 697734, 699555, 701372, 703184, 704991, 706793, 708591, 710383, 712170, 713953, 715730, 717503, 719270, 721032, 722789, 724541, 726288, 728029, 729765, 731496, 733221, 734941, 736656, 738365, 740069, 741768, 743460, 745148, 746830, 748506, 750176, 751841, 753501, 755155, 756803, 758445, 760082, 761712, 763338, 764957, 766570, 768178, 769780, 771376, 772966, 774551, 776129, 777702, 779268, 780829, 782383, 783932, 785475, 787012, 788542, 790067, 791586, 793098, 794605, 796106, 797600, 799088, 800571, 802047, 803517, 804981, 806439, 807891, 809337, 810776, 812210, 813637, 815058, 816473, 817882, 819285, 820681, 822071, 823456, 824834, 826206, 827572, 828931, 830285, 831632, 832973, 834308, 835637, 836959, 838276, 839586, 840891, 842189, 843481, 844767, 846046, 847320, 848587, 849849, 851104, 852353, 853596, 854833, 856064, 857289, 858508, 859720, 860927, 862128, 863322, 864511, 865694, 866870, 868041, 869205, 870364, 871517, 872663, 873804, 874939, 876068, 877191, 878308, 879419, 880525, 881624, 882718, 883806, 884888, 885964, 887035, 888100, 889159, 890212, 891259, 892301, 893337, 894368, 895392, 896412, 897425, 898433, 899435, 900432, 901423, 902408, 903388, 904363, 905332, 906295, 907253, 908206, 909153, 910095, 911031, 911962, 912887, 913808, 914723, 915632, 916536, 917435, 918329, 919218, 920101, 920979, 921852, 922720, 923583, 924440, 925293, 926140, 926982, 927820, 928652, 929479, 930301, 931119, 931931, 932739, 933541, 934339, 935132, 935920, 936703, 937481, 938255, 939024, 939788, 940547, 941302, 942052, 942797, 943538, 944274, 945005, 945732, 946455, 947173, 947886, 948595, 949299, 949999, 950695, 951386, 952073, 952755, 953433, 954107, 954776, 955441, 956102, 956759, 957411, 958059, 958703, 959343, 959979, 960611, 961238, 961862, 962481, 963096, 963708, 964315, 964918, 965518, 966113, 966705, 967293, 967877, 968457, 969033, 969605, 970174, 970739, 971300, 971857, 972411, 972961, 973507, 974050, 974589, 975124, 975656, 976184, 976709, 977230, 977748, 978262, 978773, 979280, 979784, 980285, 980782, 981276, 981766, 982253, 982737, 983217, 983694, 984168, 984639, 985106, 985571, 986032, 986490, 986944, 987396, 987844, 988290, 988732, 989172, 989608, 990041, 990471, 990899, 991323, 991745, 992163, 992579, 992991, 993401, 993808, 994212, 994613, 995012, 995408, 995801, 996191, 996578, 996963, 997345, 997724, 998101, 998475, 998846, 999215, 999581, 999945, 1000306, 1000664, 1001020, 1001374, 1001725, 1002073, 1002419, 1002763, 1003104, 1003442, 1003779, 1004112, 1004444, 1004773, 1005100, 1005424, 1005746, 1006066, 1006383, 1006699, 1007012, 1007322, 1007631, 1007937, 1008241, 1008543, 1008843, 1009140, 1009436, 1009729, 1010020, 1010310, 1010597, 1010881, 1011164, 1011445, 1011724, 1012001, 1012276, 1012548, 1012819, 1013088, 1013355, 1013620, 1013883, 1014144, 1014403, 1014661, 1014916, 1015170, 1015421, 1015671, 1015919, 1016166, 1016410, 1016653, 1016894, 1017133, 1017370, 1017606, 1017840, 1018072, 1018303, 1018531, 1018759, 1018984, 1019208, 1019430, 1019651, 1019870, 1020087, 1020303, 1020517, 1020729, 1020940, 1021150, 1021358, 1021564, 1021769, 1021972, 1022174, 1022374, 1022573, 1022771, 1022967, 1023161, 1023354, 1023546, 1023736, 1023925, 1024112, 1024298, 1024482, 1024666, 1024848, 1025028, 1025207, 1025385, 1025562, 1025737, 1025911, 1026083, 1026255, 1026425, 1026593, 1026761, 1026927, 1027092, 1027256, 1027419, 1027580, 1027740, 1027899, 1028057, 1028213, 1028369, 1028523, 1028676, 1028828, 1028979, 1029129, 1029277, 1029425, 1029571, 1029716, 1029860, 1030003, 1030145, 1030286, 1030426, 1030565, 1030703, 1030839, 1030975, 1031110, 1031244, 1031376, 1031508, 1031639, 1031768, 1031897, 1032025, 1032151, 1032277, 1032402, 1032526, 1032649, 1032771, 1032892, 1033013, 1033132, 1033250, 1033368, 1033485, 1033600, 1033715, 1033829, 1033942, 1034055, 1034166, 1034277, 1034387, 1034495, 1034604, 1034711, 1034817, 1034923, 1035028, 1035132, 1035235, 1035338, 1035440, 1035540, 1035641, 1035740, 1035839, 1035937, 1036034, 1036130, 1036226, 1036321, 1036415, 1036509, 1036602, 1036694, 1036785, 1036876, 1036966, 1037055, 1037144, 1037232, 1037319, 1037406, 1037492, 1037577, 1037662, 1037746, 1037830, 1037912, 1037994, 1038076, 1038157, 1038237, 1038317, 1038396, 1038474, 1038552, 1038630, 1038706, 1038782, 1038858, 1038933, 1039007, 1039081, 1039154, 1039227, 1039299, 1039370, 1039441, 1039512, 1039582, 1039651, 1039720, 1039788, 1039856, 1039924, 1039990, 1040057, 1040122, 1040188, 1040252, 1040317, 1040380, 1040444, 1040507, 1040569, 1040631, 1040692, 1040753, 1040813, 1040873, 1040933, 1040992, 1041050, 1041109, 1041166, 1041224, 1041280, 1041337, 1041393, 1041448, 1041503, 1041558, 1041612, 1041666, 1041720, 1041773, 1041825, 1041877, 1041929, 1041981, 1042032, 1042082, 1042132, 1042182, 1042232, 1042281, 1042329, 1042378, 1042426, 1042473, 1042521, 1042567, 1042614, 1042660, 1042706, 1042751, 1042796, 1042841, 1042885, 1042929, 1042973, 1043017, 1043060, 1043102, 1043145, 1043187, 1043228, 1043270, 1043311, 1043352, 1043392, 1043432, 1043472, 1043512, 1043551, 1043590, 1043628, 1043667, 1043705, 1043743, 1043780, 1043817, 1043854, 1043891, 1043927, 1043963, 1043999, 1044034, 1044069, 1044104, 1044139, 1044173, 1044207, 1044241, 1044275, 1044308, 1044341, 1044374, 1044407, 1044439, 1044471, 1044503, 1044534, 1044566, 1044597, 1044628, 1044658, 1044689, 1044719, 1044749, 1044778, 1044808, 1044837, 1044866, 1044895, 1044923, 1044952, 1044980, 1045008, 1045035, 1045063, 1045090, 1045117, 1045144, 1045171, 1045197, 1045223, 1045249, 1045275, 1045301, 1045326, 1045351, 1045376, 1045401, 1045426, 1045450, 1045474, 1045498, 1045522, 1045546, 1045570, 1045593, 1045616, 1045639, 1045662, 1045684, 1045707, 1045729, 1045751, 1045773, 1045795, 1045816, 1045838, 1045859, 1045880, 1045901, 1045922, 1045943, 1045963, 1045983, 1046003, 1046023, 1046043, 1046063, 1046082, 1046102, 1046121, 1046140, 1046159, 1046178, 1046196, 1046215, 1046233, 1046251, 1046269, 1046287, 1046305, 1046323, 1046340, 1046358, 1046375, 1046392, 1046409, 1046426, 1046442, 1046459, 1046475, 1046492, 1046508, 1046524, 1046540, 1046556, 1046571, 1046587, 1046602, 1046618, 1046633, 1046648, 1046663, 1046678, 1046693, 1046707, 1046722, 1046736, 1046750, 1046765, 1046779, 1046793, 1046807, 1046820, 1046834, 1046847, 1046861, 1046874, 1046887, 1046901, 1046914, 1046926, 1046939, 1046952, 1046965, 1046977, 1046990, 1047002, 1047014, 1047026, 1047038, 1047050, 1047062, 1047074, 1047086, 1047097, 1047109, 1047120, 1047131, 1047143, 1047154, 1047165, 1047176, 1047187, 1047197, 1047208, 1047219, 1047229, 1047240, 1047250, 1047260, 1047271, 1047281, 1047291, 1047301, 1047311, 1047321, 1047330, 1047340, 1047350, 1047359, 1047369, 1047378, 1047387, 1047397, 1047406, 1047415, 1047424, 1047433, 1047442, 1047451, 1047459, 1047468, 1047477, 1047485, 1047494, 1047502, 1047510, 1047519, 1047527, 1047535, 1047543, 1047551, 1047559, 1047567, 1047575, 1047583, 1047590, 1047598, 1047606, 1047613, 1047621, 1047628, 1047635, 1047643, 1047650, 1047657, 1047664, 1047671, 1047679, 1047686, 1047692, 1047699, 1047706, 1047713, 1047720, 1047726, 1047733, 1047739, 1047746, 1047752, 1047759, 1047765, 1047771, 1047778, 1047784, 1047790, 1047796, 1047802, 1047808, 1047814, 1047820, 1047826, 1047832, 1047838, 1047843, 1047849, 1047855, 1047860, 1047866, 1047871, 1047877, 1047882, 1047888, 1047893, 1047898, 1047904, 1047909, 1047914, 1047919, 1047924, 1047929, 1047934, 1047939, 1047944, 1047949, 1047954, 1047959, 1047964, 1047969, 1047973, 1047978, 1047983, 1047987, 1047992, 1047996, 1048001, 1048005, 1048010, 1048014, 1048019, 1048023, 1048027, 1048031, 1048036, 1048040, 1048044, 1048048, 1048052, 1048056, 1048060, 1048064, 1048068, 1048072, 1048076, 1048080, 1048084, 1048088, 1048092, 1048095, 1048099, 1048103, 1048107, 1048110, 1048114, 1048117, 1048121, 1048125, 1048128, 1048132, 1048135, 1048138, 1048142, 1048145, 1048149, 1048152, 1048155, 1048158, 1048162, 1048165, 1048168, 1048171, 1048174, 1048178, 1048181, 1048184, 1048187, 1048190, 1048193, 1048196, 1048199, 1048202, 1048205, 1048207, 1048210, 1048213, 1048216, 1048219, 1048222};

// 10 bit -> 16 bit
// typedef unsigned short qtint;
// constexpr int tbbit = 10;
// constexpr int tbshift = 7;
// constexpr int sigshift = 16;
// constexpr int celushift = 16;
// constexpr qaint celu_table[1024] = {0, -510, -1016, -1518, -2016, -2511, -3001, -3488, -3971, -4450, -4925, -5397, -5865, -6329, -6790, -7247, -7701, -8151, -8597, -9040, -9480, -9916, -10349, -10779, -11205, -11628, -12047, -12463, -12876, -13286, -13693, -14096, -14497, -14894, -15288, -15679, -16067, -16452, -16834, -17213, -17589, -17962, -18332, -18700, -19064, -19426, -19784, -20141, -20494, -20844, -21192, -21537, -21880, -22219, -22556, -22891, -23223, -23552, -23879, -24203, -24525, -24844, -25160, -25475, -25786, -26096, -26403, -26707, -27009, -27309, -27607, -27902, -28195, -28485, -28774, -29060, -29344, -29625, -29905, -30182, -30457, -30730, -31001, -31270, -31536, -31801, -32063, -32324, -32582, -32839, -33093, -33346, -33596, -33845, -34091, -34336, -34579, -34820, -35059, -35296, -35531, -35765, -35997, -36226, -36455, -36681, -36905, -37128, -37349, -37569, -37786, -38002, -38217, -38429, -38640, -38849, -39057, -39263, -39468, -39670, -39872, -40071, -40270, -40466, -40661, -40855, -41047, -41238, -41427, -41614, -41800, -41985, -42168, -42350, -42531, -42710, -42887, -43064, -43238, -43412, -43584, -43755, -43925, -44093, -44260, -44425, -44589, -44752, -44914, -45075, -45234, -45392, -45549, -45704, -45859, -46012, -46164, -46314, -46464, -46612, -46760, -46906, -47051, -47195, -47337, -47479, -47619, -47759, -47897, -48034, -48171, -48306, -48440, -48573, -48705, -48836, -48966, -49095, -49223, -49350, -49476, -49601, -49725, -49848, -49970, -50091, -50211, -50330, -50449, -50566, -50683, -50798, -50913, -51027, -51140, -51252, -51363, -51473, -51583, -51691, -51799, -51906, -52012, -52117, -52222, -52325, -52428, -52530, -52631, -52732, -52831, -52930, -53028, -53126, -53222, -53318, -53413, -53507, -53601, -53694, -53786, -53877, -53968, -54058, -54148, -54236, -54324, -54411, -54498, -54584, -54669, -54754, -54838, -54921, -55003, -55085, -55167, -55247, -55327, -55407, -55486, -55564, -55642, -55719, -55795, -55871, -55946, -56021, -56095, -56168, -56241, -56313, -56385, -56456, -56527, -56597, -56667, -56736, -56804, -56872, -56940, -57006, -57073, -57139, -57204, -57269, -57333, -57397, -57460, -57523, -57586, -57647, -57709, -57770, -57830, -57890, -57950, -58009, -58067, -58125, -58183, -58240, -58297, -58353, -58409, -58465, -58520, -58574, -58629, -58682, -58736, -58789, -58841, -58893, -58945, -58996, -59047, -59098, -59148, -59197, -59247, -59296, -59344, -59392, -59440, -59488, -59535, -59581, -59628, -59674, -59719, -59765, -59810, -59854, -59898, -59942, -59986, -60029, -60072, -60114, -60156, -60198, -60240, -60281, -60322, -60363, -60403, -60443, -60482, -60522, -60561, -60599, -60638, -60676, -60714, -60751, -60789, -60826, -60862, -60899, -60935, -60970, -61006, -61041, -61076, -61111, -61145, -61180, -61213, -61247, -61280, -61314, -61346, -61379, -61411, -61443, -61475, -61507, -61538, -61569, -61600, -61631, -61661, -61691, -61721, -61751, -61780, -61810, -61839, -61867, -61896, -61924, -61952, -61980, -62008, -62035, -62063, -62090, -62117, -62143, -62170, -62196, -62222, -62248, -62273, -62299, -62324, -62349, -62374, -62398, -62423, -62447, -62471, -62495, -62518, -62542, -62565, -62588, -62611, -62634, -62657, -62679, -62701, -62723, -62745, -62767, -62788, -62810, -62831, -62852, -62873, -62894, -62914, -62935, -62955, -62975, -62995, -63015, -63034, -63054, -63073, -63092, -63111, -63130, -63149, -63167, -63186, -63204, -63222, -63240, -63258, -63276, -63293, -63311, -63328, -63345, -63362, -63379, -63396, -63413, -63429, -63446, -63462, -63478, -63494, -63510, -63526, -63541, -63557, -63572, -63588, -63603, -63618, -63633, -63648, -63662, -63677, -63691, -63706, -63720, -63734, -63748, -63762, -63776, -63790, -63803, -63817, -63830, -63843, -63856, -63870, -63882, -63895, -63908, -63921, -63933, -63946, -63958, -63970, -63983, -63995, -64007, -64019, -64030, -64042, -64054, -64065, -64077, -64088, -64099, -64111, -64122, -64133, -64144, -64154, -64165, -64176, -64186, -64197, -64207, -64218, -64228, -64238, -64248, -64258, -64268, -64278, -64288, -64298, -64307, -64317, -64326, -64336, -64345, -64354, -64363, -64373, -64382, -64391, -64400, -64408, -64417, -64426, -64435, -64443, -64452, -64460, -64468, -64477, -64485, -64493, -64501, -64509, -64517, -64525, -64533, -64541, -64549, -64556, -64564, -64572, -64579, -64586, -64594, -64601, -64608, -64616, -64623, -64630, -64637, -64644, -64651, -64658, -64665, -64671, -64678, -64685, -64691, -64698, -64705, -64711, -64717, -64724, -64730, -64736, -64743, -64749, -64755, -64761, -64767, -64773, -64779, -64785, -64791, -64796, -64802, -64808, -64814, -64819, -64825, -64830, -64836, -64841, -64847, -64852, -64857, -64863, -64868, -64873, -64878, -64883, -64888, -64894, -64899, -64903, -64908, -64913, -64918, -64923, -64928, -64932, -64937, -64942, -64946, -64951, -64956, -64960, -64965, -64969, -64973, -64978, -64982, -64986, -64991, -64995, -64999, -65003, -65008, -65012, -65016, -65020, -65024, -65028, -65032, -65036, -65040, -65043, -65047, -65051, -65055, -65059, -65062, -65066, -65070, -65073, -65077, -65080, -65084, -65087, -65091, -65094, -65098, -65101, -65105, -65108, -65111, -65115, -65118, -65121, -65124, -65128, -65131, -65134, -65137, -65140, -65143, -65146, -65149, -65152, -65155, -65158, -65161, -65164, -65167, -65170, -65173, -65176, -65178, -65181, -65184, -65187, -65189, -65192, -65195, -65197, -65200, -65203, -65205, -65208, -65210, -65213, -65215, -65218, -65220, -65223, -65225, -65228, -65230, -65233, -65235, -65237, -65240, -65242, -65244, -65246, -65249, -65251, -65253, -65255, -65258, -65260, -65262, -65264, -65266, -65268, -65270, -65272, -65274, -65276, -65278, -65280, -65282, -65284, -65286, -65288, -65290, -65292, -65294, -65296, -65298, -65300, -65301, -65303, -65305, -65307, -65309, -65310, -65312, -65314, -65316, -65317, -65319, -65321, -65322, -65324, -65326, -65327, -65329, -65331, -65332, -65334, -65335, -65337, -65339, -65340, -65342, -65343, -65345, -65346, -65348, -65349, -65350, -65352, -65353, -65355, -65356, -65358, -65359, -65360, -65362, -65363, -65364, -65366, -65367, -65368, -65370, -65371, -65372, -65374, -65375, -65376, -65377, -65379, -65380, -65381, -65382, -65383, -65385, -65386, -65387, -65388, -65389, -65390, -65392, -65393, -65394, -65395, -65396, -65397, -65398, -65399, -65400, -65401, -65402, -65403, -65404, -65405, -65406, -65407, -65408, -65409, -65410, -65411, -65412, -65413, -65414, -65415, -65416, -65417, -65418, -65419, -65420, -65421, -65422, -65423, -65423, -65424, -65425, -65426, -65427, -65428, -65429, -65429, -65430, -65431, -65432, -65433, -65434, -65434, -65435, -65436, -65437, -65437, -65438, -65439, -65440, -65441, -65441, -65442, -65443, -65443, -65444, -65445, -65446, -65446, -65447, -65448, -65448, -65449, -65450, -65450, -65451, -65452, -65452, -65453, -65454, -65454, -65455, -65456, -65456, -65457, -65457, -65458, -65459, -65459, -65460, -65460, -65461, -65462, -65462, -65463, -65463, -65464, -65464, -65465, -65466, -65466, -65467, -65467, -65468, -65468, -65469, -65469, -65470, -65470, -65471, -65471, -65472, -65472, -65473, -65473, -65474, -65474, -65475, -65475, -65476, -65476, -65477, -65477, -65478, -65478, -65479, -65479, -65479, -65480, -65480, -65481, -65481, -65482, -65482, -65482, -65483, -65483, -65484, -65484, -65484, -65485, -65485, -65486, -65486, -65486, -65487, -65487, -65488, -65488, -65488, -65489, -65489, -65489, -65490, -65490, -65491, -65491, -65491, -65492, -65492, -65492, -65493, -65493, -65493, -65494, -65494, -65494, -65495, -65495, -65495, -65496, -65496, -65496, -65497, -65497, -65497, -65497, -65498, -65498, -65498, -65499, -65499, -65499, -65499, -65500, -65500, -65500, -65501, -65501, -65501, -65501, -65502, -65502, -65502, -65502, -65503, -65503, -65503, -65504, -65504, -65504, -65504, -65505, -65505, -65505, -65505, -65505, -65506, -65506, -65506, -65506, -65507, -65507, -65507, -65507, -65508, -65508, -65508, -65508, -65508, -65509, -65509, -65509, -65509, -65509, -65510, -65510, -65510, -65510, -65510, -65511, -65511, -65511, -65511, -65511, -65512, -65512, -65512, -65512, -65512, -65513, -65513, -65513, -65513, -65513, -65513, -65514, -65514};
// constexpr qaint Sigmoid_table[1024] = {32768, 32896, 33024, 33152, 33280, 33408, 33536, 33664, 33792, 33920, 34047, 34175, 34303, 34431, 34558, 34686, 34813, 34941, 35068, 35196, 35323, 35450, 35577, 35704, 35831, 35958, 36085, 36211, 36338, 36464, 36591, 36717, 36843, 36969, 37095, 37220, 37346, 37471, 37597, 37722, 37847, 37972, 38096, 38221, 38345, 38469, 38593, 38717, 38841, 38965, 39088, 39211, 39334, 39457, 39579, 39702, 39824, 39946, 40068, 40189, 40310, 40432, 40552, 40673, 40793, 40914, 41034, 41153, 41273, 41392, 41511, 41630, 41748, 41867, 41985, 42102, 42220, 42337, 42454, 42571, 42687, 42803, 42919, 43035, 43150, 43265, 43380, 43494, 43608, 43722, 43836, 43949, 44062, 44175, 44287, 44399, 44511, 44622, 44733, 44844, 44954, 45065, 45174, 45284, 45393, 45502, 45610, 45718, 45826, 45934, 46041, 46148, 46254, 46360, 46466, 46572, 46677, 46782, 46886, 46990, 47094, 47197, 47300, 47403, 47505, 47607, 47709, 47810, 47911, 48011, 48111, 48211, 48310, 48409, 48508, 48606, 48704, 48802, 48899, 48996, 49092, 49188, 49284, 49379, 49474, 49569, 49663, 49757, 49850, 49943, 50036, 50128, 50220, 50311, 50402, 50493, 50584, 50674, 50763, 50852, 50941, 51030, 51118, 51205, 51293, 51379, 51466, 51552, 51638, 51723, 51808, 51893, 51977, 52061, 52144, 52227, 52310, 52392, 52474, 52556, 52637, 52718, 52798, 52878, 52957, 53037, 53116, 53194, 53272, 53350, 53427, 53504, 53581, 53657, 53733, 53808, 53883, 53958, 54032, 54106, 54179, 54253, 54325, 54398, 54470, 54541, 54613, 54684, 54754, 54824, 54894, 54964, 55033, 55102, 55170, 55238, 55306, 55373, 55440, 55506, 55572, 55638, 55704, 55769, 55834, 55898, 55962, 56026, 56089, 56152, 56215, 56277, 56339, 56401, 56462, 56523, 56583, 56643, 56703, 56763, 56822, 56881, 56939, 56998, 57055, 57113, 57170, 57227, 57284, 57340, 57396, 57451, 57506, 57561, 57616, 57670, 57724, 57778, 57831, 57884, 57936, 57989, 58041, 58092, 58144, 58195, 58246, 58296, 58346, 58396, 58446, 58495, 58544, 58593, 58641, 58689, 58737, 58784, 58831, 58878, 58925, 58971, 59017, 59063, 59108, 59153, 59198, 59243, 59287, 59331, 59375, 59418, 59462, 59505, 59547, 59590, 59632, 59674, 59715, 59756, 59797, 59838, 59879, 59919, 59959, 59999, 60038, 60077, 60116, 60155, 60194, 60232, 60270, 60307, 60345, 60382, 60419, 60456, 60492, 60529, 60565, 60600, 60636, 60671, 60706, 60741, 60776, 60810, 60844, 60878, 60912, 60945, 60979, 61012, 61044, 61077, 61109, 61141, 61173, 61205, 61237, 61268, 61299, 61330, 61360, 61391, 61421, 61451, 61481, 61511, 61540, 61569, 61598, 61627, 61656, 61684, 61712, 61740, 61768, 61796, 61823, 61850, 61878, 61904, 61931, 61958, 61984, 62010, 62036, 62062, 62088, 62113, 62138, 62163, 62188, 62213, 62238, 62262, 62286, 62310, 62334, 62358, 62381, 62405, 62428, 62451, 62474, 62497, 62519, 62542, 62564, 62586, 62608, 62630, 62651, 62673, 62694, 62715, 62736, 62757, 62778, 62798, 62819, 62839, 62859, 62879, 62899, 62919, 62938, 62958, 62977, 62996, 63015, 63034, 63053, 63071, 63090, 63108, 63126, 63144, 63162, 63180, 63198, 63215, 63233, 63250, 63267, 63284, 63301, 63318, 63335, 63351, 63368, 63384, 63400, 63416, 63432, 63448, 63464, 63479, 63495, 63510, 63526, 63541, 63556, 63571, 63586, 63600, 63615, 63630, 63644, 63658, 63672, 63687, 63700, 63714, 63728, 63742, 63755, 63769, 63782, 63796, 63809, 63822, 63835, 63848, 63861, 63873, 63886, 63898, 63911, 63923, 63935, 63948, 63960, 63972, 63983, 63995, 64007, 64019, 64030, 64042, 64053, 64064, 64075, 64087, 64098, 64109, 64119, 64130, 64141, 64152, 64162, 64173, 64183, 64193, 64203, 64214, 64224, 64234, 64244, 64254, 64263, 64273, 64283, 64292, 64302, 64311, 64321, 64330, 64339, 64348, 64357, 64366, 64375, 64384, 64393, 64402, 64410, 64419, 64427, 64436, 64444, 64453, 64461, 64469, 64477, 64486, 64494, 64502, 64509, 64517, 64525, 64533, 64541, 64548, 64556, 64563, 64571, 64578, 64585, 64593, 64600, 64607, 64614, 64621, 64628, 64635, 64642, 64649, 64656, 64663, 64669, 64676, 64683, 64689, 64696, 64702, 64709, 64715, 64721, 64728, 64734, 64740, 64746, 64752, 64758, 64764, 64770, 64776, 64782, 64788, 64793, 64799, 64805, 64810, 64816, 64822, 64827, 64832, 64838, 64843, 64849, 64854, 64859, 64864, 64870, 64875, 64880, 64885, 64890, 64895, 64900, 64905, 64910, 64914, 64919, 64924, 64929, 64933, 64938, 64943, 64947, 64952, 64956, 64961, 64965, 64969, 64974, 64978, 64983, 64987, 64991, 64995, 64999, 65004, 65008, 65012, 65016, 65020, 65024, 65028, 65032, 65036, 65039, 65043, 65047, 65051, 65055, 65058, 65062, 65066, 65069, 65073, 65076, 65080, 65084, 65087, 65091, 65094, 65097, 65101, 65104, 65107, 65111, 65114, 65117, 65121, 65124, 65127, 65130, 65133, 65136, 65139, 65143, 65146, 65149, 65152, 65155, 65158, 65160, 65163, 65166, 65169, 65172, 65175, 65178, 65180, 65183, 65186, 65189, 65191, 65194, 65197, 65199, 65202, 65204, 65207, 65209, 65212, 65215, 65217, 65219, 65222, 65224, 65227, 65229, 65232, 65234, 65236, 65239, 65241, 65243, 65245, 65248, 65250, 65252, 65254, 65257, 65259, 65261, 65263, 65265, 65267, 65269, 65271, 65273, 65275, 65277, 65279, 65281, 65283, 65285, 65287, 65289, 65291, 65293, 65295, 65297, 65299, 65300, 65302, 65304, 65306, 65308, 65309, 65311, 65313, 65315, 65316, 65318, 65320, 65321, 65323, 65325, 65326, 65328, 65330, 65331, 65333, 65334, 65336, 65338, 65339, 65341, 65342, 65344, 65345, 65347, 65348, 65350, 65351, 65352, 65354, 65355, 65357, 65358, 65359, 65361, 65362, 65364, 65365, 65366, 65368, 65369, 65370, 65371, 65373, 65374, 65375, 65376, 65378, 65379, 65380, 65381, 65383, 65384, 65385, 65386, 65387, 65388, 65390, 65391, 65392, 65393, 65394, 65395, 65396, 65397, 65398, 65399, 65401, 65402, 65403, 65404, 65405, 65406, 65407, 65408, 65409, 65410, 65411, 65412, 65413, 65414, 65415, 65416, 65416, 65417, 65418, 65419, 65420, 65421, 65422, 65423, 65424, 65425, 65425, 65426, 65427, 65428, 65429, 65430, 65430, 65431, 65432, 65433, 65434, 65435, 65435, 65436, 65437, 65438, 65438, 65439, 65440, 65441, 65441, 65442, 65443, 65444, 65444, 65445, 65446, 65446, 65447, 65448, 65448, 65449, 65450, 65451, 65451, 65452, 65452, 65453, 65454, 65454, 65455, 65456, 65456, 65457, 65458, 65458, 65459, 65459, 65460, 65461, 65461, 65462, 65462, 65463, 65463, 65464, 65465, 65465, 65466, 65466, 65467, 65467, 65468, 65468, 65469, 65469, 65470, 65470, 65471, 65471, 65472, 65472, 65473, 65473, 65474, 65474, 65475, 65475, 65476, 65476, 65477, 65477, 65478, 65478, 65479, 65479, 65479, 65480, 65480, 65481, 65481, 65482, 65482, 65482, 65483, 65483, 65484, 65484, 65485, 65485, 65485, 65486, 65486, 65486, 65487, 65487, 65488, 65488, 65488, 65489, 65489, 65489, 65490, 65490, 65491, 65491, 65491, 65492, 65492, 65492, 65493, 65493, 65493, 65494, 65494, 65494, 65495, 65495, 65495, 65496, 65496, 65496, 65497, 65497, 65497, 65497, 65498, 65498, 65498, 65499, 65499, 65499, 65499, 65500, 65500, 65500, 65501, 65501, 65501, 65501, 65502, 65502, 65502, 65502, 65503, 65503, 65503, 65504, 65504, 65504, 65504, 65505, 65505, 65505, 65505, 65505, 65506, 65506, 65506, 65506, 65507, 65507, 65507, 65507, 65508, 65508, 65508, 65508, 65508, 65509, 65509, 65509, 65509, 65509, 65510, 65510, 65510, 65510, 65511, 65511, 65511, 65511, 65511, 65511, 65512, 65512, 65512, 65512, 65512, 65513, 65513, 65513, 65513, 65513, 65514, 65514, 65514};

// 8 bit -> 16 bit
// typedef unsigned char qtint;
// constexpr int tbbit = 8;
// constexpr int tbshift = 5;
// constexpr int sigshift = 16;
// constexpr int celushift = 16;
// constexpr qaint celu_table[256] = {0, -2016, -3971, -5865, -7701, -9480, -11205, -12876, -14497, -16067, -17589, -19064, -20494, -21880, -23223, -24525, -25786, -27009, -28195, -29344, -30457, -31536, -32582, -33596, -34579, -35531, -36455, -37349, -38217, -39057, -39872, -40661, -41427, -42168, -42887, -43584, -44260, -44914, -45549, -46164, -46760, -47337, -47897, -48440, -48966, -49476, -49970, -50449, -50913, -51363, -51799, -52222, -52631, -53028, -53413, -53786, -54148, -54498, -54838, -55167, -55486, -55795, -56095, -56385, -56667, -56940, -57204, -57460, -57709, -57950, -58183, -58409, -58629, -58841, -59047, -59247, -59440, -59628, -59810, -59986, -60156, -60322, -60482, -60638, -60789, -60935, -61076, -61213, -61346, -61475, -61600, -61721, -61839, -61952, -62063, -62170, -62273, -62374, -62471, -62565, -62657, -62745, -62831, -62914, -62995, -63073, -63149, -63222, -63293, -63362, -63429, -63494, -63557, -63618, -63677, -63734, -63790, -63843, -63895, -63946, -63995, -64042, -64088, -64133, -64176, -64218, -64258, -64298, -64336, -64373, -64408, -64443, -64477, -64509, -64541, -64572, -64601, -64630, -64658, -64685, -64711, -64736, -64761, -64785, -64808, -64830, -64852, -64873, -64894, -64913, -64932, -64951, -64969, -64986, -65003, -65020, -65036, -65051, -65066, -65080, -65094, -65108, -65121, -65134, -65146, -65158, -65170, -65181, -65192, -65203, -65213, -65223, -65233, -65242, -65251, -65260, -65268, -65276, -65284, -65292, -65300, -65307, -65314, -65321, -65327, -65334, -65340, -65346, -65352, -65358, -65363, -65368, -65374, -65379, -65383, -65388, -65393, -65397, -65401, -65405, -65409, -65413, -65417, -65421, -65424, -65428, -65431, -65434, -65437, -65441, -65443, -65446, -65449, -65452, -65454, -65457, -65459, -65462, -65464, -65466, -65468, -65470, -65472, -65474, -65476, -65478, -65480, -65482, -65483, -65485, -65486, -65488, -65489, -65491, -65492, -65494, -65495, -65496, -65497, -65499, -65500, -65501, -65502, -65503, -65504, -65505, -65506, -65507, -65508, -65509, -65509, -65510, -65511, -65512, -65513, -65513};
// constexpr qaint Sigmoid_table[256] = {32768, 33280, 33792, 34303, 34813, 35323, 35831, 36338, 36843, 37346, 37847, 38345, 38841, 39334, 39824, 40310, 40793, 41273, 41748, 42220, 42687, 43150, 43608, 44062, 44511, 44954, 45393, 45826, 46254, 46677, 47094, 47505, 47911, 48310, 48704, 49092, 49474, 49850, 50220, 50584, 50941, 51293, 51638, 51977, 52310, 52637, 52957, 53272, 53581, 53883, 54179, 54470, 54754, 55033, 55306, 55572, 55834, 56089, 56339, 56583, 56822, 57055, 57284, 57506, 57724, 57936, 58144, 58346, 58544, 58737, 58925, 59108, 59287, 59462, 59632, 59797, 59959, 60116, 60270, 60419, 60565, 60706, 60844, 60979, 61109, 61237, 61360, 61481, 61598, 61712, 61823, 61931, 62036, 62138, 62238, 62334, 62428, 62519, 62608, 62694, 62778, 62859, 62938, 63015, 63090, 63162, 63233, 63301, 63368, 63432, 63495, 63556, 63615, 63672, 63728, 63782, 63835, 63886, 63935, 63983, 64030, 64075, 64119, 64162, 64203, 64244, 64283, 64321, 64357, 64393, 64427, 64461, 64494, 64525, 64556, 64585, 64614, 64642, 64669, 64696, 64721, 64746, 64770, 64793, 64816, 64838, 64859, 64880, 64900, 64919, 64938, 64956, 64974, 64991, 65008, 65024, 65039, 65055, 65069, 65084, 65097, 65111, 65124, 65136, 65149, 65160, 65172, 65183, 65194, 65204, 65215, 65224, 65234, 65243, 65252, 65261, 65269, 65277, 65285, 65293, 65300, 65308, 65315, 65321, 65328, 65334, 65341, 65347, 65352, 65358, 65364, 65369, 65374, 65379, 65384, 65388, 65393, 65397, 65402, 65406, 65410, 65414, 65417, 65421, 65425, 65428, 65431, 65435, 65438, 65441, 65444, 65446, 65449, 65452, 65454, 65457, 65459, 65462, 65464, 65466, 65468, 65470, 65472, 65474, 65476, 65478, 65480, 65482, 65483, 65485, 65486, 65488, 65489, 65491, 65492, 65494, 65495, 65496, 65497, 65499, 65500, 65501, 65502, 65503, 65504, 65505, 65506, 65507, 65508, 65509, 65509, 65510, 65511, 65512, 65513, 65513};

// 8 bit -> 16, 14 bit
// typedef unsigned char qtint;
// constexpr int tbbit = 8;
// constexpr int tbshift = 5;
// constexpr int celushift = 16;
// constexpr int sigshift = 14;
// constexpr qaint celu_table[256] = {0, -2016, -3971, -5865, -7701, -9480, -11205, -12876, -14497, -16067, -17589, -19064, -20494, -21880, -23223, -24525, -25786, -27009, -28195, -29344, -30457, -31536, -32582, -33596, -34579, -35531, -36455, -37349, -38217, -39057, -39872, -40661, -41427, -42168, -42887, -43584, -44260, -44914, -45549, -46164, -46760, -47337, -47897, -48440, -48966, -49476, -49970, -50449, -50913, -51363, -51799, -52222, -52631, -53028, -53413, -53786, -54148, -54498, -54838, -55167, -55486, -55795, -56095, -56385, -56667, -56940, -57204, -57460, -57709, -57950, -58183, -58409, -58629, -58841, -59047, -59247, -59440, -59628, -59810, -59986, -60156, -60322, -60482, -60638, -60789, -60935, -61076, -61213, -61346, -61475, -61600, -61721, -61839, -61952, -62063, -62170, -62273, -62374, -62471, -62565, -62657, -62745, -62831, -62914, -62995, -63073, -63149, -63222, -63293, -63362, -63429, -63494, -63557, -63618, -63677, -63734, -63790, -63843, -63895, -63946, -63995, -64042, -64088, -64133, -64176, -64218, -64258, -64298, -64336, -64373, -64408, -64443, -64477, -64509, -64541, -64572, -64601, -64630, -64658, -64685, -64711, -64736, -64761, -64785, -64808, -64830, -64852, -64873, -64894, -64913, -64932, -64951, -64969, -64986, -65003, -65020, -65036, -65051, -65066, -65080, -65094, -65108, -65121, -65134, -65146, -65158, -65170, -65181, -65192, -65203, -65213, -65223, -65233, -65242, -65251, -65260, -65268, -65276, -65284, -65292, -65300, -65307, -65314, -65321, -65327, -65334, -65340, -65346, -65352, -65358, -65363, -65368, -65374, -65379, -65383, -65388, -65393, -65397, -65401, -65405, -65409, -65413, -65417, -65421, -65424, -65428, -65431, -65434, -65437, -65441, -65443, -65446, -65449, -65452, -65454, -65457, -65459, -65462, -65464, -65466, -65468, -65470, -65472, -65474, -65476, -65478, -65480, -65482, -65483, -65485, -65486, -65488, -65489, -65491, -65492, -65494, -65495, -65496, -65497, -65499, -65500, -65501, -65502, -65503, -65504, -65505, -65506, -65507, -65508, -65509, -65509, -65510, -65511, -65512, -65513, -65513};
// constexpr qaint Sigmoid_table[256] = {8192, 8320, 8448, 8576, 8703, 8831, 8958, 9084, 9211, 9336, 9462, 9586, 9710, 9833, 9956, 10078, 10198, 10318, 10437, 10555, 10672, 10788, 10902, 11015, 11128, 11239, 11348, 11457, 11564, 11669, 11773, 11876, 11978, 12078, 12176, 12273, 12369, 12463, 12555, 12646, 12735, 12823, 12909, 12994, 13077, 13159, 13239, 13318, 13395, 13471, 13545, 13617, 13689, 13758, 13826, 13893, 13958, 14022, 14085, 14146, 14206, 14264, 14321, 14377, 14431, 14484, 14536, 14587, 14636, 14684, 14731, 14777, 14822, 14865, 14908, 14949, 14990, 15029, 15067, 15105, 15141, 15177, 15211, 15245, 15277, 15309, 15340, 15370, 15400, 15428, 15456, 15483, 15509, 15535, 15559, 15584, 15607, 15630, 15652, 15673, 15694, 15715, 15735, 15754, 15772, 15791, 15808, 15825, 15842, 15858, 15874, 15889, 15904, 15918, 15932, 15946, 15959, 15971, 15984, 15996, 16008, 16019, 16030, 16041, 16051, 16061, 16071, 16080, 16089, 16098, 16107, 16115, 16123, 16131, 16139, 16146, 16154, 16161, 16167, 16174, 16180, 16187, 16193, 16198, 16204, 16209, 16215, 16220, 16225, 16230, 16234, 16239, 16243, 16248, 16252, 16256, 16260, 16264, 16267, 16271, 16274, 16278, 16281, 16284, 16287, 16290, 16293, 16296, 16298, 16301, 16304, 16306, 16308, 16311, 16313, 16315, 16317, 16319, 16321, 16323, 16325, 16327, 16329, 16330, 16332, 16334, 16335, 16337, 16338, 16340, 16341, 16342, 16343, 16345, 16346, 16347, 16348, 16349, 16350, 16351, 16352, 16353, 16354, 16355, 16356, 16357, 16358, 16359, 16359, 16360, 16361, 16362, 16362, 16363, 16364, 16364, 16365, 16365, 16366, 16367, 16367, 16368, 16368, 16369, 16369, 16370, 16370, 16370, 16371, 16371, 16372, 16372, 16372, 16373, 16373, 16373, 16374, 16374, 16374, 16375, 16375, 16375, 16375, 16376, 16376, 16376, 16376, 16377, 16377, 16377, 16377, 16378, 16378, 16378, 16378, 16378};

// 8 bit -> 12, 14 bit
typedef unsigned char qtint;
constexpr int tbbit = 8;
constexpr int tbshift = 5;
constexpr int celushift = 12;
constexpr int sigshift = 14;
constexpr qaint celu_table[256] = {0, -126, -248, -367, -481, -593, -700, -805, -906, -1004, -1099, -1192, -1281, -1367, -1451, -1533, -1612, -1688, -1762, -1834, -1904, -1971, -2036, -2100, -2161, -2221, -2278, -2334, -2389, -2441, -2492, -2541, -2589, -2636, -2680, -2724, -2766, -2807, -2847, -2885, -2922, -2959, -2994, -3027, -3060, -3092, -3123, -3153, -3182, -3210, -3237, -3264, -3289, -3314, -3338, -3362, -3384, -3406, -3427, -3448, -3468, -3487, -3506, -3524, -3542, -3559, -3575, -3591, -3607, -3622, -3636, -3651, -3664, -3678, -3690, -3703, -3715, -3727, -3738, -3749, -3760, -3770, -3780, -3790, -3799, -3808, -3817, -3826, -3834, -3842, -3850, -3858, -3865, -3872, -3879, -3886, -3892, -3898, -3904, -3910, -3916, -3922, -3927, -3932, -3937, -3942, -3947, -3951, -3956, -3960, -3964, -3968, -3972, -3976, -3980, -3983, -3987, -3990, -3993, -3997, -4000, -4003, -4006, -4008, -4011, -4014, -4016, -4019, -4021, -4023, -4026, -4028, -4030, -4032, -4034, -4036, -4038, -4039, -4041, -4043, -4044, -4046, -4048, -4049, -4050, -4052, -4053, -4055, -4056, -4057, -4058, -4059, -4061, -4062, -4063, -4064, -4065, -4066, -4067, -4068, -4068, -4069, -4070, -4071, -4072, -4072, -4073, -4074, -4075, -4075, -4076, -4076, -4077, -4078, -4078, -4079, -4079, -4080, -4080, -4081, -4081, -4082, -4082, -4083, -4083, -4083, -4084, -4084, -4084, -4085, -4085, -4086, -4086, -4086, -4086, -4087, -4087, -4087, -4088, -4088, -4088, -4088, -4089, -4089, -4089, -4089, -4089, -4090, -4090, -4090, -4090, -4090, -4091, -4091, -4091, -4091, -4091, -4091, -4091, -4092, -4092, -4092, -4092, -4092, -4092, -4092, -4092, -4093, -4093, -4093, -4093, -4093, -4093, -4093, -4093, -4093, -4093, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4094, -4095, -4095};
constexpr qaint Sigmoid_table[256] = {8192, 8320, 8448, 8576, 8703, 8831, 8958, 9084, 9211, 9336, 9462, 9586, 9710, 9833, 9956, 10078, 10198, 10318, 10437, 10555, 10672, 10788, 10902, 11015, 11128, 11239, 11348, 11457, 11564, 11669, 11773, 11876, 11978, 12078, 12176, 12273, 12369, 12463, 12555, 12646, 12735, 12823, 12909, 12994, 13077, 13159, 13239, 13318, 13395, 13471, 13545, 13617, 13689, 13758, 13826, 13893, 13958, 14022, 14085, 14146, 14206, 14264, 14321, 14377, 14431, 14484, 14536, 14587, 14636, 14684, 14731, 14777, 14822, 14865, 14908, 14949, 14990, 15029, 15067, 15105, 15141, 15177, 15211, 15245, 15277, 15309, 15340, 15370, 15400, 15428, 15456, 15483, 15509, 15535, 15559, 15584, 15607, 15630, 15652, 15673, 15694, 15715, 15735, 15754, 15772, 15791, 15808, 15825, 15842, 15858, 15874, 15889, 15904, 15918, 15932, 15946, 15959, 15971, 15984, 15996, 16008, 16019, 16030, 16041, 16051, 16061, 16071, 16080, 16089, 16098, 16107, 16115, 16123, 16131, 16139, 16146, 16154, 16161, 16167, 16174, 16180, 16187, 16193, 16198, 16204, 16209, 16215, 16220, 16225, 16230, 16234, 16239, 16243, 16248, 16252, 16256, 16260, 16264, 16267, 16271, 16274, 16278, 16281, 16284, 16287, 16290, 16293, 16296, 16298, 16301, 16304, 16306, 16308, 16311, 16313, 16315, 16317, 16319, 16321, 16323, 16325, 16327, 16329, 16330, 16332, 16334, 16335, 16337, 16338, 16340, 16341, 16342, 16343, 16345, 16346, 16347, 16348, 16349, 16350, 16351, 16352, 16353, 16354, 16355, 16356, 16357, 16358, 16359, 16359, 16360, 16361, 16362, 16362, 16363, 16364, 16364, 16365, 16365, 16366, 16367, 16367, 16368, 16368, 16369, 16369, 16370, 16370, 16370, 16371, 16371, 16372, 16372, 16372, 16373, 16373, 16373, 16374, 16374, 16374, 16375, 16375, 16375, 16375, 16376, 16376, 16376, 16376, 16377, 16377, 16377, 16377, 16378, 16378, 16378, 16378, 16378};

#define clip(v) min(max((qmint) round(v), QA_MIN), QA_MAX)
// #define clip(v) v

#define conv_out_size(size, kernel_size, stride, padding) ((size) + 2 * (padding) - (kernel_size)) / (stride) + 1
#define invres_out_size(size, kernel_size, stride) conv_out_size((size), (kernel_size), (stride), (kernel_size) / 2)
#define stack_out_size(size, kernel_size, stride) invres_out_size((size), (kernel_size), (stride))

#define new_2d_qaint(arr, d0, d1) for (int iii2 = 0; iii2 < (d0); iii2++) {(arr)[iii2] = new qaint[(d1)];}
#define new_2d(arr, d0, d1) for (int iii2 = 0; iii2 < (d0); iii2++) {(arr)[iii2] = new float[(d1)];}
#define new_3d(arr, d0, d1, d2) for (int iii3 = 0; iii3 < (d0); iii3++) {(arr)[iii3] = new float*[(d1)]; new_2d((arr)[iii3], (d1), (d2));}
#define new_4d(arr, d0, d1, d2, d3) for (int iii4 = 0; iii4 < (d0); iii4++) {(arr)[iii4] = new float**[(d1)]; new_3d((arr)[iii4], (d1), (d2), (d3));}

#define tmp_delete_2d(arr, d0, d1) for (int iii2 = 0; iii2 < (d0); iii2++) {delete[] (arr)[iii2];}
#define tmp_delete_3d(arr, d0, d1, d2) for (int iii3 = 0; iii3 < (d0); iii3++) {tmp_delete_2d((arr)[iii3], (d1), (d2)); delete[] (arr)[iii3];}
#define tmp_delete_4d(arr, d0, d1, d2, d3) for (int iii4 = 0; iii4 < (d0); iii4++) {tmp_delete_3d((arr)[iii4], (d1), (d2), (d3)); delete[] (arr)[iii4];}

#define delete_2d(arr, d0, d1) tmp_delete_2d(arr, d0, d1) ; delete[] (arr);
#define delete_3d(arr, d0, d1, d2) tmp_delete_3d(arr, d0, d1, d2) ; delete[] (arr);
#define delete_4d(arr, d0, d1, d2, d3) tmp_delete_4d(arr, d0, d1, d2, d3); delete[] (arr);


// utils
void pose_distance(const float reference_pose[4 * 4], const float measurement_pose[4 * 4], float &combined_measure, float &R_measure, float &t_measure);
void get_warp_grid_for_cost_volume_calculation(float warp_grid[3][width_2 * height_2]);
void cost_volume_fusion(const qaint image1[fpn_output_channels * height_2 * width_2],
                        const int n_measurement_frames,
                        const qaint image2s[test_n_measurement_frames * fpn_output_channels * height_2 * width_2],
                        const float* warpings,
                        qaint fused_cost_volume[n_depth_levels * height_2 * width_2],
                        const int act_in, int& act_out);
void get_non_differentiable_rectangle_depth_estimation(const float reference_pose[4 * 4],
                                                       const float measurement_pose[4 * 4],
                                                       const float previous_depth[test_image_height][test_image_width],
                                                       const float full_K[3][3],
                                                       const float half_K[3][3],
                                                       float depth_hypothesis[1][height_2][width_2]);
void warp_frame_depth(const float image_src[hyper_channels * 16][height_32][width_32],
                      const float depth_dst[height_32][width_32],
                      const float trans[4][4],
                      const float camera_matrix[3][3],
                      float image_dst[hyper_channels * 16][height_32][width_32]);
bool is_pose_available(const float pose[4 * 4]);

// keyframe_buffer
class KeyframeBuffer{
public:
    KeyframeBuffer(){
        new_2d(buffer_poses, buffer_size, 4 * 4);
        new_2d_qaint(buffer_feature_halfs, buffer_size, fpn_output_channels * height_2 * width_2);
    }

    int try_new_keyframe(const float pose[4 * 4]);
    void add_new_keyframe(const float pose[4 * 4], const qaint feature_half[fpn_output_channels * height_2 * width_2]);
    int get_best_measurement_frames(const float reference_pose[4 * 4], float measurement_poses[test_n_measurement_frames * 4 * 4], qaint measurement_feature_halfs[test_keyframe_buffer_size * fpn_output_channels * height_2 * width_2]);

    void close() {
        delete_2d(buffer_poses, buffer_size, 4 * 4);
        delete_2d(buffer_feature_halfs, buffer_size, fpn_output_channels * height_2 * width_2);
    }

private:
    const int buffer_size = test_keyframe_buffer_size;
    int buffer_idx = 0;
    int buffer_cnt = 0;
    float **buffer_poses = new float*[test_keyframe_buffer_size];
    qaint **buffer_feature_halfs = new qaint*[test_keyframe_buffer_size];
    const float optimal_R_score = test_optimal_R_measure;
    const float optimal_t_score = test_optimal_t_measure;
    const float keyframe_pose_distance = test_keyframe_pose_distance;
    int __tracking_lost_counter = 0;
    float calculate_penalty(const float t_score, const float R_score);
};

// dataset_loader
void get_updated_intrinsics(const float K[3][3], float updated_intrinsic[3][3]);
void load_image(const string image_filename, float reference_image[3 * test_image_height * test_image_width]);
void save_image(const string image_filename, float depth[test_image_height][test_image_width]);
